{
  "abi": [
    {
      "inputs": [],
      "name": "SF_TOKEN_AGREEMENT_ALREADY_EXISTS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_AGREEMENT_DOES_NOT_EXIST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_BURN_INSUFFICIENT_BALANCE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_MOVE_INSUFFICIENT_BALANCE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_ONLY_HOST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_ONLY_LISTED_AGREEMENT",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_MINT_TO_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_NFT_PROXY_ADDRESS_CHANGED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_NO_UNDERLYING_TOKEN",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_ONLY_GOV_OWNER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_ONLY_HOST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_ONLY_SELF",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "AgreementCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "penaltyAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "rewardAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        }
      ],
      "name": "AgreementLiquidated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "liquidatorAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "penaltyAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bondAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bailoutAmount",
          "type": "uint256"
        }
      ],
      "name": "AgreementLiquidatedBy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidatorAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "targetAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "rewardAmountReceiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "targetAccountBalanceDelta",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "liquidationTypeData",
          "type": "bytes"
        }
      ],
      "name": "AgreementLiquidatedV2",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slotId",
          "type": "uint256"
        }
      ],
      "name": "AgreementStateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "AgreementTerminated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "AgreementUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bailoutAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bailoutAmount",
          "type": "uint256"
        }
      ],
      "name": "Bailout",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IConstantInflowNFT",
          "name": "constantInflowNFT",
          "type": "address"
        }
      ],
      "name": "ConstantInflowNFTCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IConstantOutflowNFT",
          "name": "constantOutflowNFT",
          "type": "address"
        }
      ],
      "name": "ConstantOutflowNFTCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Sent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenDowngraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CONSTANT_INFLOW_NFT",
      "outputs": [
        {
          "internalType": "contract IConstantInflowNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONSTANT_OUTFLOW_NFT",
      "outputs": [
        {
          "internalType": "contract IConstantOutflowNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "createAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultOperators",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "downgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "downgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAccountActiveAgreements",
      "outputs": [
        {
          "internalType": "contract ISuperAgreement[]",
          "name": "activeAgreements",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        }
      ],
      "name": "getAgreementData",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "slotId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        }
      ],
      "name": "getAgreementStateSlot",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "slotData",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHost",
      "outputs": [
        {
          "internalType": "address",
          "name": "host",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUnderlyingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "granularity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "underlyingToken",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "underlyingDecimals",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "n",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "s",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "isAccountCritical",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isCritical",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAccountCriticalNow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isCritical",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "isAccountSolvent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isSolvent",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAccountSolventNow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isSolvent",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "isOperatorFor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "liquidationTypeData",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "liquidatorAccount",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "useDefaultRewardAccount",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "targetAccount",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "targetAccountBalanceDelta",
          "type": "int256"
        }
      ],
      "name": "makeLiquidationPayoutsV2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "operationDecreaseAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationDowngrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "operationIncreaseAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "operationSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationUpgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "realtimeBalanceOf",
      "outputs": [
        {
          "internalType": "int256",
          "name": "availableBalance",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedDeposit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "realtimeBalanceOfNow",
      "outputs": [
        {
          "internalType": "int256",
          "name": "availableBalance",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedDeposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "selfApproveFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "selfBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "selfMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "selfTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "delta",
          "type": "int256"
        }
      ],
      "name": "settleBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        }
      ],
      "name": "terminateAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "transferAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "updateAgreementData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "slotId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "slotData",
          "type": "bytes32[]"
        }
      ],
      "name": "updateAgreementStateSlot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "upgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "CONSTANT_INFLOW_NFT()": "4c5c0c85",
    "CONSTANT_OUTFLOW_NFT()": "ef43d2c6",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "authorizeOperator(address)": "959b8c3f",
    "balanceOf(address)": "70a08231",
    "burn(uint256,bytes)": "fe9d9303",
    "createAgreement(bytes32,bytes32[])": "12a6a3f8",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "defaultOperators()": "06e48538",
    "downgrade(uint256)": "11bcc81e",
    "downgradeTo(address,uint256)": "83ba2525",
    "getAccountActiveAgreements(address)": "386fa221",
    "getAgreementData(address,bytes32,uint256)": "6c2d9f2f",
    "getAgreementStateSlot(address,address,uint256,uint256)": "4b61cc33",
    "getHost()": "20bc4425",
    "getUnderlyingToken()": "ee719bc8",
    "granularity()": "556f0dc7",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(address,uint8,string,string)": "42fe0980",
    "isAccountCritical(address,uint256)": "d9d078d6",
    "isAccountCriticalNow(address)": "79359f6f",
    "isAccountSolvent(address,uint256)": "b84cdd4a",
    "isAccountSolventNow(address)": "bb0d196e",
    "isOperatorFor(address,address)": "d95b6371",
    "makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": "1863e809",
    "name()": "06fdde03",
    "operationApprove(address,address,uint256)": "62aa5287",
    "operationDecreaseAllowance(address,address,uint256)": "c780fd82",
    "operationDowngrade(address,uint256)": "245887fc",
    "operationIncreaseAllowance(address,address,uint256)": "4b2763b3",
    "operationSend(address,address,uint256,bytes)": "ca0c1e7f",
    "operationTransferFrom(address,address,address,uint256)": "16d055d6",
    "operationUpgrade(address,uint256)": "ca789464",
    "operatorBurn(address,uint256,bytes,bytes)": "fc673c4f",
    "operatorSend(address,address,uint256,bytes,bytes)": "62ad1b83",
    "realtimeBalanceOf(address,uint256)": "eb3537cc",
    "realtimeBalanceOfNow(address)": "2ec8eec7",
    "revokeOperator(address)": "fad8b32a",
    "selfApproveFor(address,address,uint256)": "66a12fb6",
    "selfBurn(address,uint256,bytes)": "9d876741",
    "selfMint(address,uint256,bytes)": "c68d4283",
    "selfTransferFrom(address,address,address,uint256)": "41b706be",
    "send(address,uint256,bytes)": "9bd9bbc6",
    "settleBalance(address,int256)": "cf97256d",
    "symbol()": "95d89b41",
    "terminateAgreement(bytes32,uint256)": "27048397",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferAll(address)": "a3a7e7f3",
    "transferFrom(address,address,uint256)": "23b872dd",
    "updateAgreementData(bytes32,bytes32[])": "a1b2bf8b",
    "updateAgreementStateSlot(address,uint256,bytes32[])": "090c415e",
    "upgrade(uint256)": "45977d03",
    "upgradeTo(address,uint256,bytes)": "5b9d09cc"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SF_TOKEN_AGREEMENT_ALREADY_EXISTS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_AGREEMENT_DOES_NOT_EXIST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_BURN_INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_MOVE_INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_ONLY_HOST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_ONLY_LISTED_AGREEMENT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_MINT_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_NFT_PROXY_ADDRESS_CHANGED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_NO_UNDERLYING_TOKEN\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_ONLY_GOV_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_ONLY_HOST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_ONLY_SELF\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bondAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidatedBy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardAmountReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"}],\"name\":\"AgreementLiquidatedV2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"}],\"name\":\"AgreementStateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"AgreementTerminated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bailoutAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"Bailout\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IConstantInflowNFT\",\"name\":\"constantInflowNFT\",\"type\":\"address\"}],\"name\":\"ConstantInflowNFTCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IConstantOutflowNFT\",\"name\":\"constantOutflowNFT\",\"type\":\"address\"}],\"name\":\"ConstantOutflowNFTCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenDowngraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CONSTANT_INFLOW_NFT\",\"outputs\":[{\"internalType\":\"contract IConstantInflowNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONSTANT_OUTFLOW_NFT\",\"outputs\":[{\"internalType\":\"contract IConstantOutflowNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"createAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"downgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"downgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountActiveAgreements\",\"outputs\":[{\"internalType\":\"contract ISuperAgreement[]\",\"name\":\"activeAgreements\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementData\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementStateSlot\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUnderlyingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"underlyingDecimals\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"n\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"s\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountCritical\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountCriticalNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountSolvent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountSolventNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useDefaultRewardAccount\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"}],\"name\":\"makeLiquidationPayoutsV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"operationDecreaseAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationDowngrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"operationIncreaseAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"operationSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationUpgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"realtimeBalanceOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"realtimeBalanceOfNow\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"selfApproveFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"selfBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"selfMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"selfTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"settleBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"terminateAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementStateSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"events\":{\"AgreementCreated(address,bytes32,bytes32[])\":{\"details\":\"Agreement created event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"AgreementLiquidated(address,bytes32,address,address,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"details\":\"Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAccount\":\"Account that collect the reward\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedBy(address,address,bytes32,address,address,uint256,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"custom:note\":\" Reward account rule: - if bailout is equal to 0, then   - the bondAccount will get the rewardAmount,   - the penaltyAccount will pay for the rewardAmount. - if bailout is larger than 0, then   - the liquidatorAccount will get the rewardAmouont,   - the bondAccount will pay for both the rewardAmount and bailoutAmount,   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount.\",\"details\":\"Agreement liquidation event (DEPRECATED BY AgreementLiquidatedV2)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"bailoutAmount\":\"Amount of liquidation bailouot\",\"bondAccount\":\"Account that collect the reward or bailout accounts\",\"id\":\"Agreement ID\",\"liquidatorAccount\":\"Account of the agent that performed the liquidation.\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedV2(address,bytes32,address,address,address,uint256,int256,bytes)\":{\"custom:note\":\" Reward account rule: - if the agreement is liquidated during the PIC period   - the rewardAmountReceiver will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount   - the targetAccount will pay for the rewardAmount - if the agreement is liquidated after the PIC period AND the targetAccount is solvent   - the rewardAmountReceiver will get the rewardAmount (remaining deposit)   - the targetAccount will pay for the rewardAmount - if the targetAccount is insolvent   - the liquidatorAccount will get the rewardAmount (single deposit)   - the default reward account (governance) will pay for both the rewardAmount and bailoutAmount   - the targetAccount will receive the bailoutAmount\",\"details\":\"Agreement liquidation event v2 (including agent account)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"liquidationTypeData\":\"The encoded liquidation type data including the version (how to decode)\",\"liquidatorAccount\":\"Address of the executor of the liquidation\",\"rewardAmount\":\"The amount the reward recipient account balance should change by\",\"rewardAmountReceiver\":\"Account that collects the reward or bails out insolvent accounts\",\"targetAccount\":\"Account of the stream sender\",\"targetAccountBalanceDelta\":\"The amount the sender account balance should change by\"}},\"AgreementStateUpdated(address,address,uint256)\":{\"details\":\"Agreement account state updated event\",\"params\":{\"account\":\"Account updated\",\"agreementClass\":\"Contract address of the agreement\",\"slotId\":\"slot id of the agreement state\"}},\"AgreementTerminated(address,bytes32)\":{\"details\":\"Agreement terminated event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\"}},\"AgreementUpdated(address,bytes32,bytes32[])\":{\"details\":\"Agreement updated event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"AuthorizedOperator(address,address)\":{\"details\":\"Emitted when `operator` is made operator for `tokenHolder`.\"},\"Bailout(address,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"details\":\"System bailout occurred (DEPRECATED BY AgreementLiquidatedBy)\",\"params\":{\"bailoutAccount\":\"Account that bailout the penalty account\",\"bailoutAmount\":\"Amount of account bailout\"}},\"Burned(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `operator` destroys `amount` tokens from `account`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"ConstantInflowNFTCreated(address)\":{\"details\":\"Constant Inflow NFT proxy created event\",\"params\":{\"constantInflowNFT\":\"constant inflow nft address\"}},\"ConstantOutflowNFTCreated(address)\":{\"details\":\"Constant Outflow NFT proxy created event\",\"params\":{\"constantOutflowNFT\":\"constant outflow nft address\"}},\"Minted(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `amount` tokens are created by `operator` and assigned to `to`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"RevokedOperator(address,address)\":{\"details\":\"Emitted when `operator` is revoked its operator status for `tokenHolder`.\"},\"TokenDowngraded(address,uint256)\":{\"details\":\"Token downgrade event\",\"params\":{\"account\":\"Account whose tokens are downgraded\",\"amount\":\"Amount of tokens downgraded\"}},\"TokenUpgraded(address,uint256)\":{\"details\":\"Token upgrade event\",\"params\":{\"account\":\"Account where tokens are upgraded to\",\"amount\":\"Amount of tokens upgraded (in 18 decimals)\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be         allowed to spend on behalf of `owner` through {transferFrom}. This is         zero by default.\"},\"approve(address,uint256)\":{\"custom:emits\":\"an {Approval} event.\",\"custom:note\":\"Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.\",\"returns\":{\"_0\":\"Returns Success a boolean value indicating whether the operation succeeded.\"}},\"authorizeOperator(address)\":{\"custom:emits\":\"an {AuthorizedOperator} event.\",\"custom:requirements\":\" - `operator` cannot be calling address.\",\"details\":\"Make an account an operator of the caller. See {isOperatorFor}.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by an account (`owner`).\"},\"burn(uint256,bytes)\":{\"custom:emits\":\"a {Burned} event.\",\"custom:requirements\":\" - the caller must have at least `amount` tokens.\",\"details\":\"Destroys `amount` tokens from the caller's account, reducing the total supply and transfers the underlying token to the caller's account. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}.\"},\"createAgreement(bytes32,bytes32[])\":{\"details\":\"Create a new agreement\",\"params\":{\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"decimals()\":{\"custom:note\":\"SuperToken always uses 18 decimals. This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\",\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.\"},\"decreaseAllowance(address,uint256)\":{\"custom:emits\":\"an {Approval} event indicating the updated allowance.\",\"custom:requirements\":\" - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\",\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\"},\"defaultOperators()\":{\"details\":\"Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false.\"},\"downgrade(uint256)\":{\"details\":\"Downgrade SuperToken to ERC20.It will call transfer to send tokens\",\"params\":{\"amount\":\"Number of tokens to be downgraded\"}},\"downgradeTo(address,uint256)\":{\"details\":\"Downgrade SuperToken to ERC20 and transfer immediately\",\"params\":{\"amount\":\"Number of tokens to be downgraded (in 18 decimals)\",\"to\":\"The account to receive downgraded tokens\"}},\"getAccountActiveAgreements(address)\":{\"details\":\"An active agreement is one that has state for the account\",\"params\":{\"account\":\"Account to query\"},\"returns\":{\"activeAgreements\":\"List of accounts that have non-zero states for the account\"}},\"getAgreementData(address,bytes32,uint256)\":{\"details\":\"Get data of the agreement\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\"},\"returns\":{\"data\":\"Data of the agreement\"}},\"getAgreementStateSlot(address,address,uint256,uint256)\":{\"details\":\"Get data of the slot of the state of an agreement\",\"params\":{\"account\":\"Account to query\",\"agreementClass\":\"Contract address of the agreement\",\"dataLength\":\"length of the state data\",\"slotId\":\"slot id of the state\"}},\"getHost()\":{\"details\":\"Get superfluid host contract address\"},\"getUnderlyingToken()\":{\"details\":\"Return the underlying token contract\",\"returns\":{\"tokenAddr\":\"Underlying token address\"}},\"granularity()\":{\"custom:note\":\"For super token contracts, this value is always 1\",\"details\":\"Returns the smallest part of the token that is not divisible. This         means all token operations (creation, movement and destruction) must have         amounts that are a multiple of this number.\"},\"increaseAllowance(address,uint256)\":{\"custom:emits\":\"an {Approval} event indicating the updated allowance.\",\"custom:requirements\":\" - `spender` cannot be the zero address.\",\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\"},\"initialize(address,uint8,string,string)\":{\"details\":\"Initialize the contract\"},\"isAccountCritical(address,uint256)\":{\"details\":\"A critical account is when availableBalance < 0\",\"params\":{\"account\":\"The account to check\",\"timestamp\":\"The time we'd like to check if the account is critical (should use future)\"},\"returns\":{\"isCritical\":\"Whether the account is critical\"}},\"isAccountCriticalNow(address)\":{\"details\":\"A critical account is when availableBalance < 0\",\"params\":{\"account\":\"The account to check\"},\"returns\":{\"isCritical\":\"Whether the account is critical\"}},\"isAccountSolvent(address,uint256)\":{\"details\":\"An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\",\"params\":{\"account\":\"The account to check\",\"timestamp\":\"The time we'd like to check if the account is solvent (should use future)\"},\"returns\":{\"isSolvent\":\"True if the account is solvent, false otherwise\"}},\"isAccountSolventNow(address)\":{\"details\":\"An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\",\"params\":{\"account\":\"The account to check\"},\"returns\":{\"isSolvent\":\"True if the account is solvent, false otherwise\"}},\"isOperatorFor(address,address)\":{\"details\":\"Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}.\"},\"makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)\":{\"custom:modifiers\":\"  - onlyAgreement\",\"custom:note\":\" - If a bailout is required (bailoutAmount > 0)   - the actual reward (single deposit) goes to the executor,   - while the reward account becomes the bailout account   - total bailout include: bailout amount + reward amount   - the targetAccount will be bailed out - If a bailout is not required   - the targetAccount will pay the rewardAmount   - the liquidator (reward account in PIC period) will receive the rewardAmount\",\"details\":\"Make liquidation payouts (v2)\",\"params\":{\"id\":\"Agreement ID\",\"liquidationTypeData\":\"Data regarding the version of the liquidation schema and the type\",\"liquidatorAccount\":\"Address of the executor of the liquidation\",\"rewardAmount\":\"The amount the rewarded account will receive\",\"targetAccount\":\"Account to be liquidated\",\"targetAccountBalanceDelta\":\"The delta amount the target account balance should change by\",\"useDefaultRewardAccount\":\"Whether or not the default reward account receives the rewardAmount\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"operationApprove(address,address,uint256)\":{\"custom:modifiers\":\"  - onlyHost\",\"details\":\"Perform ERC20 approve by host contract.\",\"params\":{\"account\":\"The account owner to be approved.\",\"amount\":\"Number of tokens to be approved.\",\"spender\":\"The spender of account owner's funds.\"}},\"operationDowngrade(address,uint256)\":{\"custom:modifiers\":\"  - onlyHost\",\"details\":\"Downgrade ERC20 to SuperToken by host contract.\",\"params\":{\"account\":\"The account to be changed.\",\"amount\":\"Number of tokens to be downgraded (in 18 decimals)\"}},\"operationSend(address,address,uint256,bytes)\":{\"custom:modifiers\":\"  - onlyHost\",\"details\":\"Perform ERC777 send by host contract.\",\"params\":{\"amount\":\"Number of tokens to be transferred.\",\"data\":\"Arbitrary user inputted data\",\"recipient\":\"The recipient of the funds.\",\"spender\":\"The account where the funds is sent from.\"}},\"operationTransferFrom(address,address,address,uint256)\":{\"custom:modifiers\":\"  - onlyHost\",\"details\":\"Perform ERC20 transferFrom by host contract.\",\"params\":{\"account\":\"The account to spend sender's funds.\",\"amount\":\"Number of tokens to be transferred.\",\"recipient\":\"The recipient of the funds.\",\"spender\":\"The account where the funds is sent from.\"}},\"operationUpgrade(address,uint256)\":{\"custom:modifiers\":\"  - onlyHost\",\"details\":\"Upgrade ERC20 to SuperToken by host contract.\",\"params\":{\"account\":\"The account to be changed.\",\"amount\":\"Number of tokens to be upgraded (in 18 decimals)\"}},\"operatorBurn(address,uint256,bytes,bytes)\":{\"custom:emits\":\"a {Burned} event.\",\"custom:requirements\":\" - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`.\",\"details\":\"Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"custom:emits\":\"a {Sent} event.\",\"custom:requirements\":\" - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\",\"details\":\"Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\"},\"realtimeBalanceOf(address,uint256)\":{\"details\":\"Calculate the real balance of a user, taking in consideration all agreements of the account\",\"params\":{\"account\":\"for the query\",\"timestamp\":\"Time of balance\"},\"returns\":{\"availableBalance\":\"Real-time balance\",\"deposit\":\"Account deposit\",\"owedDeposit\":\"Account owed Deposit\"}},\"realtimeBalanceOfNow(address)\":{\"details\":\"realtimeBalanceOf with timestamp equals to block timestamp\",\"params\":{\"account\":\"for the query\"},\"returns\":{\"availableBalance\":\"Real-time balance\",\"deposit\":\"Account deposit\",\"owedDeposit\":\"Account owed Deposit\"}},\"revokeOperator(address)\":{\"custom:emits\":\"a {RevokedOperator} event.\",\"custom:requirements\":\" - `operator` cannot be calling address.\",\"details\":\"Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}.\"},\"selfApproveFor(address,address,uint256)\":{\"custom:modifiers\":\"  - onlySelf\",\"details\":\"Give `spender`, `amount` allowance to spend the tokens of `account`.\"},\"selfBurn(address,uint256,bytes)\":{\"custom:modifiers\":\"  - onlySelf\",\"details\":\"Burn existing tokens for the account\"},\"selfMint(address,uint256,bytes)\":{\"custom:modifiers\":\"  - onlySelf\",\"details\":\"Mint new tokens for the account\"},\"selfTransferFrom(address,address,address,uint256)\":{\"custom:modifiers\":\"  - onlySelf\",\"details\":\"Transfer `amount` tokens from the `sender` to `recipient`. If `spender` isn't the same as `sender`, checks if `spender` has allowance to spend tokens of `sender`.\"},\"send(address,uint256,bytes)\":{\"custom:emits\":\"a {Sent} event.\",\"custom:requirements\":\" - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\",\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.If send or receive hooks are registered for the caller and `recipient`,      the corresponding functions will be called with `data` and empty      `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\"},\"settleBalance(address,int256)\":{\"custom:modifiers\":\"  - onlyAgreement\",\"details\":\"The agreement needs to make sure that the balance delta is balanced afterwards\",\"params\":{\"account\":\"Account to query.\",\"delta\":\"Amount of balance delta to be settled\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"terminateAgreement(bytes32,uint256)\":{\"details\":\"Close the agreement\",\"params\":{\"id\":\"Agreement ID\"}},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"custom:emits\":\"a {Transfer} event.\",\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.\",\"returns\":{\"_0\":\"Returns Success a boolean value indicating whether the operation succeeded.\"}},\"transferAll(address)\":{\"details\":\"Transfer all available balance from `msg.sender` to `recipient`\"},\"transferFrom(address,address,uint256)\":{\"custom:emits\":\"a {Transfer} event.\",\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the         allowance mechanism. `amount` is then deducted from the caller's         allowance.\",\"returns\":{\"_0\":\"Returns Success a boolean value indicating whether the operation succeeded.\"}},\"updateAgreementData(bytes32,bytes32[])\":{\"details\":\"Create a new agreement\",\"params\":{\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"updateAgreementStateSlot(address,uint256,bytes32[])\":{\"custom:note\":\" - To clear the storage out, provide zero-ed array of intended length\",\"details\":\"Update agreement state slot\",\"params\":{\"account\":\"Account to be updated\"}},\"upgrade(uint256)\":{\"custom:note\":\"It will use `transferFrom` to get tokens. Before calling this function you should `approve` this contract\",\"details\":\"Upgrade ERC20 to SuperToken.\",\"params\":{\"amount\":\"Number of tokens to be upgraded (in 18 decimals)\"}},\"upgradeTo(address,uint256,bytes)\":{\"custom:note\":\"It will use `transferFrom` to get tokens. Before calling this function you should `approve` this contract \",\"custom:requirements\":\" - if `data` is NOT empty AND `to` is a contract, it MUST be a registered ERC777 recipient otherwise it reverts.\",\"custom:warning\":\"- there is potential of reentrancy IF the \\\"to\\\" account is a registered ERC777 recipient.\",\"details\":\"Upgrade ERC20 to SuperToken and transfer immediately\",\"params\":{\"amount\":\"Number of tokens to be upgraded (in 18 decimals)\",\"data\":\"User data for the TokensRecipient callback\",\"to\":\"The account to receive upgraded tokens\"}}},\"title\":\"Super token (Superfluid Token + ERC20 + ERC777) interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"This value changes when {approve} or {transferFrom} are called.\"},\"getAccountActiveAgreements(address)\":{\"notice\":\"Get a list of agreements that is active for the account\"},\"isAccountCritical(address,uint256)\":{\"notice\":\"Check if account is critical\"},\"isAccountCriticalNow(address)\":{\"notice\":\"Check if account is critical now (current host.getNow())\"},\"isAccountSolvent(address,uint256)\":{\"notice\":\"Check if account is solvent\"},\"isAccountSolventNow(address)\":{\"notice\":\"Check if account is solvent now\"},\"realtimeBalanceOfNow(address)\":{\"notice\":\"Calculate the realtime balance given the current host.getNow() value\"},\"settleBalance(address,int256)\":{\"notice\":\"Settle balance from an account by the agreement\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":\"ISuperToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@superfluid-finance/ethereum-contracts/contracts/=packages/ethereum-contracts/contracts/\",\":@superfluid-finance/solidity-semantic-money/src/=packages/solidity-semantic-money/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96\",\"dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x8c817a6d85868039485ecdf1c7163f2e06be939cfc3923ba4ca6628f614282a1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://d3e816400006db8e39faf5287f76da1785060f7a21c68103453bb37f18ba6db0\",\"dweb:/ipfs/Qmbnd8TktXALrsngVNAHR546YJgnJ47tffkPug1j4jitDu\"]},\"packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol\":{\"keccak256\":\"0xb989f0fe54561ecb32f66ac55427d98866c77ee4b6a1da52aca2e0953a7f7f06\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://049ca939f07e24558748ebacc6f17c3e72161c16516e77bf9d501c338b3dd7b4\",\"dweb:/ipfs/QmVVbywb88aaiKLzs75zz5tbkPptrm2ihki8jGrn232jW2\"]},\"packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol\":{\"keccak256\":\"0x5df423f453923ff6f7ee716e7c1c64d2e19743ad77455b0bba23fd28f2a9d587\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://191e99e332eee5c9b4a7ee19648e44554d9fe34c6c93be9fc2d2cbf9fbc1997a\",\"dweb:/ipfs/QmcxN6M6WAhmso9Yevag419p6tDNjJH3DJqbWdBurc4o8J\"]},\"packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol\":{\"keccak256\":\"0x1c62c63f39c7c9ba03ddde542690ccfea343b5b3b442ed4cf2830b43af6f9cbe\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e3ef914d4089c070d1f48b8d292a360d05373e5454ab45d6bef3d8b5170c3885\",\"dweb:/ipfs/QmZcXa9CfuaCxDfp8ncip6oAY849HFzDJ8rnMN8roSLvnk\"]},\"packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol\":{\"keccak256\":\"0x3a93bb86598d8840dc333efce41c0fcc8b839df6597c3be49dcb4e3d4fb9f074\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://469e7af1687de706da737007596663e20ec634d7ac6daa032be8c263e57eb518\",\"dweb:/ipfs/QmSQtjPankaurKEbKrf2M1bLe3TaPFvdHxUdmaRYgZ4TG4\"]},\"packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol\":{\"keccak256\":\"0x5555e072e755dea4ffcd4c0c74d8ca8e7f782d462e049c8eb09171b0edc38394\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://25b7c8e97377da22641038a58b1f05a719634241887839874191012a203dbfcf\",\"dweb:/ipfs/QmbvMjTbm4gpPaxSBGetBYSJs2SQesAzjEp66F9w8JoZhG\"]},\"packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820\",\"dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW\"]},\"packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x0182f29b230b034686dc505935ca0a1635fc537274bb592393a6e259010be08b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://6c728b787a7575bbfab0e6c24b18ccd29e457f5797611027af3f8ca664e94dcc\",\"dweb:/ipfs/QmXxAWjWjLdEdZQVAJyEYcBtiZBdNK7c5CfDC5UjaN3yZQ\"]},\"packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xc179b68b0641e7fa8873d77a4f3bb1116533e5da1120683fe5ee4bb6419d38d2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://b888e81e39cc519e56ac10553756c059e18cbea45debb7113c6a1c86008a96c6\",\"dweb:/ipfs/QmWeWRsF52zk122qmxjpVePSRvdXjfDZzDY1ucdFtDMEjh\"]},\"packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x4373e5263f72b371514c42be3e4bcf3ff11f0b6920a54bec105411d40f62fb0e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://baca0912833dd331120bc19d101b81fb486b4a57aec6b7ebe323649116d9270c\",\"dweb:/ipfs/Qmbcs9vAd2vvczWFGcFoQUR2Bzdd4hzHq7Bggkz52qpBrb\"]},\"packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0xab9dab941f99d0f0ef6125fb6eafde03378d7c3e94e613dd12fb7fbf594c3373\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://928c6ef915dee69058d4cfcb9f2344d4fc78d9763b47b17e5c03fbff64ba3c64\",\"dweb:/ipfs/Qmdk733ZHceatz3qbuodLCCS9TUspJJtXLoX6vWwMvrPDE\"]},\"packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x90a9259d0f0bb6b1bb6d48f051277eb75df96a9fbe684a203a3a468ad19318e2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://9c8162a2d07ffe768920fef55292684149173afefbfba76b8fca007e55092229\",\"dweb:/ipfs/QmducLNwrzeUXEpBjUTSMu7sfmQEwVhcYXApe4brc1zQ6V\"]},\"packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72\",\"dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY\"]},\"packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x55be78ffb441c782f612b153d7d9049e3f0dbfd412c1f7df29c896b972b2985f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a223c68e38a6c9b1e363e525911bc7eda44ea517865ae53bd0d34ff858cc02ae\",\"dweb:/ipfs/QmVruGehibG6Emr2A6JHwUnhd4NzsGkE24cbGqnDpEvrKh\"]},\"packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x7456cd394cc905aae7cdbd4601ce1c296c768c13c28e66efbb913cc070bad3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5a6589b428b724721ba5b4dd196c8f366a6e694ef313add093f29af64496c042\",\"dweb:/ipfs/QmSMgV6y8L6pyyzDz6kKmafVwujNWcjTqutpCBxe4uNRqg\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_AGREEMENT_ALREADY_EXISTS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_AGREEMENT_DOES_NOT_EXIST"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_BURN_INSUFFICIENT_BALANCE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_MOVE_INSUFFICIENT_BALANCE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_ONLY_HOST"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_ONLY_LISTED_AGREEMENT"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_MINT_TO_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_NFT_PROXY_ADDRESS_CHANGED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_NO_UNDERLYING_TOKEN"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_ONLY_GOV_OWNER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_ONLY_HOST"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_ONLY_SELF"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "penaltyAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "rewardAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementLiquidated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "liquidatorAccount",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "penaltyAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "bondAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "bailoutAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementLiquidatedBy",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "liquidatorAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "targetAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "rewardAmountReceiver",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "targetAccountBalanceDelta",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "liquidationTypeData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementLiquidatedV2",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "slotId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementStateUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementTerminated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenHolder",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorizedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "bailoutAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "bailoutAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Bailout",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Burned",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IConstantInflowNFT",
              "name": "constantInflowNFT",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConstantInflowNFTCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IConstantOutflowNFT",
              "name": "constantOutflowNFT",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConstantOutflowNFTCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Minted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenHolder",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RevokedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Sent",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenDowngraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONSTANT_INFLOW_NFT",
          "outputs": [
            {
              "internalType": "contract IConstantInflowNFT",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONSTANT_OUTFLOW_NFT",
          "outputs": [
            {
              "internalType": "contract IConstantOutflowNFT",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createAgreement"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultOperators",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "downgrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "downgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAccountActiveAgreements",
          "outputs": [
            {
              "internalType": "contract ISuperAgreement[]",
              "name": "activeAgreements",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "dataLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAgreementData",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slotId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dataLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAgreementStateSlot",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "slotData",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getHost",
          "outputs": [
            {
              "internalType": "address",
              "name": "host",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getUnderlyingToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "tokenAddr",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "granularity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "underlyingToken",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "underlyingDecimals",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "n",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "s",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountCritical",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isCritical",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountCriticalNow",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isCritical",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountSolvent",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isSolvent",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountSolventNow",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isSolvent",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenHolder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorFor",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "liquidationTypeData",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "liquidatorAccount",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "useDefaultRewardAccount",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "targetAccount",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "targetAccountBalanceDelta",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makeLiquidationPayoutsV2"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationApprove"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationDecreaseAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationDowngrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationIncreaseAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationSend"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationUpgrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operatorBurn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operatorSend"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "realtimeBalanceOf",
          "outputs": [
            {
              "internalType": "int256",
              "name": "availableBalance",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "deposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "owedDeposit",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "realtimeBalanceOfNow",
          "outputs": [
            {
              "internalType": "int256",
              "name": "availableBalance",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "deposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "owedDeposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfApproveFor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfBurn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfMint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "send"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "delta",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "settleBalance"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "dataLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "terminateAgreement"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAll"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAgreementData"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slotId",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "slotData",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAgreementStateSlot"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "Returns the remaining number of tokens that `spender` will be         allowed to spend on behalf of `owner` through {transferFrom}. This is         zero by default."
          },
          "approve(address,uint256)": {
            "custom:emits": "an {Approval} event.",
            "custom:note": "Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
            "details": "Sets `amount` as the allowance of `spender` over the caller's tokens.",
            "returns": {
              "_0": "Returns Success a boolean value indicating whether the operation succeeded."
            }
          },
          "authorizeOperator(address)": {
            "custom:emits": "an {AuthorizedOperator} event.",
            "custom:requirements": " - `operator` cannot be calling address.",
            "details": "Make an account an operator of the caller. See {isOperatorFor}."
          },
          "balanceOf(address)": {
            "details": "Returns the amount of tokens owned by an account (`owner`)."
          },
          "burn(uint256,bytes)": {
            "custom:emits": "a {Burned} event.",
            "custom:requirements": " - the caller must have at least `amount` tokens.",
            "details": "Destroys `amount` tokens from the caller's account, reducing the total supply and transfers the underlying token to the caller's account. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}."
          },
          "createAgreement(bytes32,bytes32[])": {
            "details": "Create a new agreement",
            "params": {
              "data": "Agreement data",
              "id": "Agreement ID"
            }
          },
          "decimals()": {
            "custom:note": "SuperToken always uses 18 decimals. This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.",
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called."
          },
          "decreaseAllowance(address,uint256)": {
            "custom:emits": "an {Approval} event indicating the updated allowance.",
            "custom:requirements": " - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.",
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}."
          },
          "defaultOperators()": {
            "details": "Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false."
          },
          "downgrade(uint256)": {
            "details": "Downgrade SuperToken to ERC20.It will call transfer to send tokens",
            "params": {
              "amount": "Number of tokens to be downgraded"
            }
          },
          "downgradeTo(address,uint256)": {
            "details": "Downgrade SuperToken to ERC20 and transfer immediately",
            "params": {
              "amount": "Number of tokens to be downgraded (in 18 decimals)",
              "to": "The account to receive downgraded tokens"
            }
          },
          "getAccountActiveAgreements(address)": {
            "details": "An active agreement is one that has state for the account",
            "params": {
              "account": "Account to query"
            },
            "returns": {
              "activeAgreements": "List of accounts that have non-zero states for the account"
            }
          },
          "getAgreementData(address,bytes32,uint256)": {
            "details": "Get data of the agreement",
            "params": {
              "agreementClass": "Contract address of the agreement",
              "id": "Agreement ID"
            },
            "returns": {
              "data": "Data of the agreement"
            }
          },
          "getAgreementStateSlot(address,address,uint256,uint256)": {
            "details": "Get data of the slot of the state of an agreement",
            "params": {
              "account": "Account to query",
              "agreementClass": "Contract address of the agreement",
              "dataLength": "length of the state data",
              "slotId": "slot id of the state"
            }
          },
          "getHost()": {
            "details": "Get superfluid host contract address"
          },
          "getUnderlyingToken()": {
            "details": "Return the underlying token contract",
            "returns": {
              "tokenAddr": "Underlying token address"
            }
          },
          "granularity()": {
            "custom:note": "For super token contracts, this value is always 1",
            "details": "Returns the smallest part of the token that is not divisible. This         means all token operations (creation, movement and destruction) must have         amounts that are a multiple of this number."
          },
          "increaseAllowance(address,uint256)": {
            "custom:emits": "an {Approval} event indicating the updated allowance.",
            "custom:requirements": " - `spender` cannot be the zero address.",
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}."
          },
          "initialize(address,uint8,string,string)": {
            "details": "Initialize the contract"
          },
          "isAccountCritical(address,uint256)": {
            "details": "A critical account is when availableBalance < 0",
            "params": {
              "account": "The account to check",
              "timestamp": "The time we'd like to check if the account is critical (should use future)"
            },
            "returns": {
              "isCritical": "Whether the account is critical"
            }
          },
          "isAccountCriticalNow(address)": {
            "details": "A critical account is when availableBalance < 0",
            "params": {
              "account": "The account to check"
            },
            "returns": {
              "isCritical": "Whether the account is critical"
            }
          },
          "isAccountSolvent(address,uint256)": {
            "details": "An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance",
            "params": {
              "account": "The account to check",
              "timestamp": "The time we'd like to check if the account is solvent (should use future)"
            },
            "returns": {
              "isSolvent": "True if the account is solvent, false otherwise"
            }
          },
          "isAccountSolventNow(address)": {
            "details": "An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance",
            "params": {
              "account": "The account to check"
            },
            "returns": {
              "isSolvent": "True if the account is solvent, false otherwise"
            }
          },
          "isOperatorFor(address,address)": {
            "details": "Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}."
          },
          "makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": {
            "custom:modifiers": "  - onlyAgreement",
            "custom:note": " - If a bailout is required (bailoutAmount > 0)   - the actual reward (single deposit) goes to the executor,   - while the reward account becomes the bailout account   - total bailout include: bailout amount + reward amount   - the targetAccount will be bailed out - If a bailout is not required   - the targetAccount will pay the rewardAmount   - the liquidator (reward account in PIC period) will receive the rewardAmount",
            "details": "Make liquidation payouts (v2)",
            "params": {
              "id": "Agreement ID",
              "liquidationTypeData": "Data regarding the version of the liquidation schema and the type",
              "liquidatorAccount": "Address of the executor of the liquidation",
              "rewardAmount": "The amount the rewarded account will receive",
              "targetAccount": "Account to be liquidated",
              "targetAccountBalanceDelta": "The delta amount the target account balance should change by",
              "useDefaultRewardAccount": "Whether or not the default reward account receives the rewardAmount"
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "operationApprove(address,address,uint256)": {
            "custom:modifiers": "  - onlyHost",
            "details": "Perform ERC20 approve by host contract.",
            "params": {
              "account": "The account owner to be approved.",
              "amount": "Number of tokens to be approved.",
              "spender": "The spender of account owner's funds."
            }
          },
          "operationDowngrade(address,uint256)": {
            "custom:modifiers": "  - onlyHost",
            "details": "Downgrade ERC20 to SuperToken by host contract.",
            "params": {
              "account": "The account to be changed.",
              "amount": "Number of tokens to be downgraded (in 18 decimals)"
            }
          },
          "operationSend(address,address,uint256,bytes)": {
            "custom:modifiers": "  - onlyHost",
            "details": "Perform ERC777 send by host contract.",
            "params": {
              "amount": "Number of tokens to be transferred.",
              "data": "Arbitrary user inputted data",
              "recipient": "The recipient of the funds.",
              "spender": "The account where the funds is sent from."
            }
          },
          "operationTransferFrom(address,address,address,uint256)": {
            "custom:modifiers": "  - onlyHost",
            "details": "Perform ERC20 transferFrom by host contract.",
            "params": {
              "account": "The account to spend sender's funds.",
              "amount": "Number of tokens to be transferred.",
              "recipient": "The recipient of the funds.",
              "spender": "The account where the funds is sent from."
            }
          },
          "operationUpgrade(address,uint256)": {
            "custom:modifiers": "  - onlyHost",
            "details": "Upgrade ERC20 to SuperToken by host contract.",
            "params": {
              "account": "The account to be changed.",
              "amount": "Number of tokens to be upgraded (in 18 decimals)"
            }
          },
          "operatorBurn(address,uint256,bytes,bytes)": {
            "custom:emits": "a {Burned} event.",
            "custom:requirements": " - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`.",
            "details": "Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}."
          },
          "operatorSend(address,address,uint256,bytes,bytes)": {
            "custom:emits": "a {Sent} event.",
            "custom:requirements": " - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.",
            "details": "Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}."
          },
          "realtimeBalanceOf(address,uint256)": {
            "details": "Calculate the real balance of a user, taking in consideration all agreements of the account",
            "params": {
              "account": "for the query",
              "timestamp": "Time of balance"
            },
            "returns": {
              "availableBalance": "Real-time balance",
              "deposit": "Account deposit",
              "owedDeposit": "Account owed Deposit"
            }
          },
          "realtimeBalanceOfNow(address)": {
            "details": "realtimeBalanceOf with timestamp equals to block timestamp",
            "params": {
              "account": "for the query"
            },
            "returns": {
              "availableBalance": "Real-time balance",
              "deposit": "Account deposit",
              "owedDeposit": "Account owed Deposit"
            }
          },
          "revokeOperator(address)": {
            "custom:emits": "a {RevokedOperator} event.",
            "custom:requirements": " - `operator` cannot be calling address.",
            "details": "Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}."
          },
          "selfApproveFor(address,address,uint256)": {
            "custom:modifiers": "  - onlySelf",
            "details": "Give `spender`, `amount` allowance to spend the tokens of `account`."
          },
          "selfBurn(address,uint256,bytes)": {
            "custom:modifiers": "  - onlySelf",
            "details": "Burn existing tokens for the account"
          },
          "selfMint(address,uint256,bytes)": {
            "custom:modifiers": "  - onlySelf",
            "details": "Mint new tokens for the account"
          },
          "selfTransferFrom(address,address,address,uint256)": {
            "custom:modifiers": "  - onlySelf",
            "details": "Transfer `amount` tokens from the `sender` to `recipient`. If `spender` isn't the same as `sender`, checks if `spender` has allowance to spend tokens of `sender`."
          },
          "send(address,uint256,bytes)": {
            "custom:emits": "a {Sent} event.",
            "custom:requirements": " - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.",
            "details": "Moves `amount` tokens from the caller's account to `recipient`.If send or receive hooks are registered for the caller and `recipient`,      the corresponding functions will be called with `data` and empty      `operatorData`. See {IERC777Sender} and {IERC777Recipient}."
          },
          "settleBalance(address,int256)": {
            "custom:modifiers": "  - onlyAgreement",
            "details": "The agreement needs to make sure that the balance delta is balanced afterwards",
            "params": {
              "account": "Account to query.",
              "delta": "Amount of balance delta to be settled"
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "terminateAgreement(bytes32,uint256)": {
            "details": "Close the agreement",
            "params": {
              "id": "Agreement ID"
            }
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "custom:emits": "a {Transfer} event.",
            "details": "Moves `amount` tokens from the caller's account to `recipient`.",
            "returns": {
              "_0": "Returns Success a boolean value indicating whether the operation succeeded."
            }
          },
          "transferAll(address)": {
            "details": "Transfer all available balance from `msg.sender` to `recipient`"
          },
          "transferFrom(address,address,uint256)": {
            "custom:emits": "a {Transfer} event.",
            "details": "Moves `amount` tokens from `sender` to `recipient` using the         allowance mechanism. `amount` is then deducted from the caller's         allowance.",
            "returns": {
              "_0": "Returns Success a boolean value indicating whether the operation succeeded."
            }
          },
          "updateAgreementData(bytes32,bytes32[])": {
            "details": "Create a new agreement",
            "params": {
              "data": "Agreement data",
              "id": "Agreement ID"
            }
          },
          "updateAgreementStateSlot(address,uint256,bytes32[])": {
            "custom:note": " - To clear the storage out, provide zero-ed array of intended length",
            "details": "Update agreement state slot",
            "params": {
              "account": "Account to be updated"
            }
          },
          "upgrade(uint256)": {
            "custom:note": "It will use `transferFrom` to get tokens. Before calling this function you should `approve` this contract",
            "details": "Upgrade ERC20 to SuperToken.",
            "params": {
              "amount": "Number of tokens to be upgraded (in 18 decimals)"
            }
          },
          "upgradeTo(address,uint256,bytes)": {
            "custom:note": "It will use `transferFrom` to get tokens. Before calling this function you should `approve` this contract ",
            "custom:requirements": " - if `data` is NOT empty AND `to` is a contract, it MUST be a registered ERC777 recipient otherwise it reverts.",
            "custom:warning": "- there is potential of reentrancy IF the \"to\" account is a registered ERC777 recipient.",
            "details": "Upgrade ERC20 to SuperToken and transfer immediately",
            "params": {
              "amount": "Number of tokens to be upgraded (in 18 decimals)",
              "data": "User data for the TokensRecipient callback",
              "to": "The account to receive upgraded tokens"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "allowance(address,address)": {
            "notice": "This value changes when {approve} or {transferFrom} are called."
          },
          "getAccountActiveAgreements(address)": {
            "notice": "Get a list of agreements that is active for the account"
          },
          "isAccountCritical(address,uint256)": {
            "notice": "Check if account is critical"
          },
          "isAccountCriticalNow(address)": {
            "notice": "Check if account is critical now (current host.getNow())"
          },
          "isAccountSolvent(address,uint256)": {
            "notice": "Check if account is solvent"
          },
          "isAccountSolventNow(address)": {
            "notice": "Check if account is solvent now"
          },
          "realtimeBalanceOfNow(address)": {
            "notice": "Calculate the realtime balance given the current host.getNow() value"
          },
          "settleBalance(address,int256)": {
            "notice": "Settle balance from an account by the agreement"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@superfluid-finance/ethereum-contracts/contracts/=packages/ethereum-contracts/contracts/",
        ":@superfluid-finance/solidity-semantic-money/src/=packages/solidity-semantic-money/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol": "ISuperToken"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC777/IERC777.sol": {
        "keccak256": "0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d",
        "urls": [
          "bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96",
          "dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol": {
        "keccak256": "0x8c817a6d85868039485ecdf1c7163f2e06be939cfc3923ba4ca6628f614282a1",
        "urls": [
          "bzz-raw://d3e816400006db8e39faf5287f76da1785060f7a21c68103453bb37f18ba6db0",
          "dweb:/ipfs/Qmbnd8TktXALrsngVNAHR546YJgnJ47tffkPug1j4jitDu"
        ],
        "license": "AGPLv3"
      },
      "packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol": {
        "keccak256": "0xb989f0fe54561ecb32f66ac55427d98866c77ee4b6a1da52aca2e0953a7f7f06",
        "urls": [
          "bzz-raw://049ca939f07e24558748ebacc6f17c3e72161c16516e77bf9d501c338b3dd7b4",
          "dweb:/ipfs/QmVVbywb88aaiKLzs75zz5tbkPptrm2ihki8jGrn232jW2"
        ],
        "license": "AGPLv3"
      },
      "packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol": {
        "keccak256": "0x5df423f453923ff6f7ee716e7c1c64d2e19743ad77455b0bba23fd28f2a9d587",
        "urls": [
          "bzz-raw://191e99e332eee5c9b4a7ee19648e44554d9fe34c6c93be9fc2d2cbf9fbc1997a",
          "dweb:/ipfs/QmcxN6M6WAhmso9Yevag419p6tDNjJH3DJqbWdBurc4o8J"
        ],
        "license": "AGPLv3"
      },
      "packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol": {
        "keccak256": "0x1c62c63f39c7c9ba03ddde542690ccfea343b5b3b442ed4cf2830b43af6f9cbe",
        "urls": [
          "bzz-raw://e3ef914d4089c070d1f48b8d292a360d05373e5454ab45d6bef3d8b5170c3885",
          "dweb:/ipfs/QmZcXa9CfuaCxDfp8ncip6oAY849HFzDJ8rnMN8roSLvnk"
        ],
        "license": "AGPLv3"
      },
      "packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol": {
        "keccak256": "0x3a93bb86598d8840dc333efce41c0fcc8b839df6597c3be49dcb4e3d4fb9f074",
        "urls": [
          "bzz-raw://469e7af1687de706da737007596663e20ec634d7ac6daa032be8c263e57eb518",
          "dweb:/ipfs/QmSQtjPankaurKEbKrf2M1bLe3TaPFvdHxUdmaRYgZ4TG4"
        ],
        "license": "AGPLv3"
      },
      "packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol": {
        "keccak256": "0x5555e072e755dea4ffcd4c0c74d8ca8e7f782d462e049c8eb09171b0edc38394",
        "urls": [
          "bzz-raw://25b7c8e97377da22641038a58b1f05a719634241887839874191012a203dbfcf",
          "dweb:/ipfs/QmbvMjTbm4gpPaxSBGetBYSJs2SQesAzjEp66F9w8JoZhG"
        ],
        "license": "AGPLv3"
      },
      "packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
        "keccak256": "0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e",
        "urls": [
          "bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820",
          "dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW"
        ],
        "license": "AGPLv3"
      },
      "packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol": {
        "keccak256": "0x0182f29b230b034686dc505935ca0a1635fc537274bb592393a6e259010be08b",
        "urls": [
          "bzz-raw://6c728b787a7575bbfab0e6c24b18ccd29e457f5797611027af3f8ca664e94dcc",
          "dweb:/ipfs/QmXxAWjWjLdEdZQVAJyEYcBtiZBdNK7c5CfDC5UjaN3yZQ"
        ],
        "license": "AGPLv3"
      },
      "packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol": {
        "keccak256": "0xc179b68b0641e7fa8873d77a4f3bb1116533e5da1120683fe5ee4bb6419d38d2",
        "urls": [
          "bzz-raw://b888e81e39cc519e56ac10553756c059e18cbea45debb7113c6a1c86008a96c6",
          "dweb:/ipfs/QmWeWRsF52zk122qmxjpVePSRvdXjfDZzDY1ucdFtDMEjh"
        ],
        "license": "AGPLv3"
      },
      "packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol": {
        "keccak256": "0x4373e5263f72b371514c42be3e4bcf3ff11f0b6920a54bec105411d40f62fb0e",
        "urls": [
          "bzz-raw://baca0912833dd331120bc19d101b81fb486b4a57aec6b7ebe323649116d9270c",
          "dweb:/ipfs/Qmbcs9vAd2vvczWFGcFoQUR2Bzdd4hzHq7Bggkz52qpBrb"
        ],
        "license": "AGPLv3"
      },
      "packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol": {
        "keccak256": "0xab9dab941f99d0f0ef6125fb6eafde03378d7c3e94e613dd12fb7fbf594c3373",
        "urls": [
          "bzz-raw://928c6ef915dee69058d4cfcb9f2344d4fc78d9763b47b17e5c03fbff64ba3c64",
          "dweb:/ipfs/Qmdk733ZHceatz3qbuodLCCS9TUspJJtXLoX6vWwMvrPDE"
        ],
        "license": "AGPLv3"
      },
      "packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol": {
        "keccak256": "0x90a9259d0f0bb6b1bb6d48f051277eb75df96a9fbe684a203a3a468ad19318e2",
        "urls": [
          "bzz-raw://9c8162a2d07ffe768920fef55292684149173afefbfba76b8fca007e55092229",
          "dweb:/ipfs/QmducLNwrzeUXEpBjUTSMu7sfmQEwVhcYXApe4brc1zQ6V"
        ],
        "license": "AGPLv3"
      },
      "packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
        "keccak256": "0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6",
        "urls": [
          "bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72",
          "dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY"
        ],
        "license": "AGPLv3"
      },
      "packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol": {
        "keccak256": "0x55be78ffb441c782f612b153d7d9049e3f0dbfd412c1f7df29c896b972b2985f",
        "urls": [
          "bzz-raw://a223c68e38a6c9b1e363e525911bc7eda44ea517865ae53bd0d34ff858cc02ae",
          "dweb:/ipfs/QmVruGehibG6Emr2A6JHwUnhd4NzsGkE24cbGqnDpEvrKh"
        ],
        "license": "AGPLv3"
      },
      "packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol": {
        "keccak256": "0x7456cd394cc905aae7cdbd4601ce1c296c768c13c28e66efbb913cc070bad3e4",
        "urls": [
          "bzz-raw://5a6589b428b724721ba5b4dd196c8f366a6e694ef313add093f29af64496c042",
          "dweb:/ipfs/QmSMgV6y8L6pyyzDz6kKmafVwujNWcjTqutpCBxe4uNRqg"
        ],
        "license": "AGPLv3"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
    "id": 56839,
    "exportedSymbols": {
      "IConstantInflowNFT": [
        56087
      ],
      "IConstantOutflowNFT": [
        56141
      ],
      "IERC20": [
        30990
      ],
      "IERC777": [
        31638
      ],
      "IPoolAdminNFT": [
        56218
      ],
      "IPoolMemberNFT": [
        56221
      ],
      "ISuperToken": [
        56838
      ],
      "ISuperfluid": [
        57614
      ],
      "ISuperfluidToken": [
        58029
      ],
      "TokenInfo": [
        58109
      ]
    },
    "nodeType": "SourceUnit",
    "src": "35:20184:77",
    "nodes": [
      {
        "id": 56366,
        "nodeType": "PragmaDirective",
        "src": "35:25:77",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 56368,
        "nodeType": "ImportDirective",
        "src": "62:48:77",
        "nodes": [],
        "absolutePath": "packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
        "file": "./ISuperfluid.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56839,
        "sourceUnit": 57615,
        "symbolAliases": [
          {
            "foreign": {
              "id": 56367,
              "name": "ISuperfluid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 57614,
              "src": "71:11:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 56370,
        "nodeType": "ImportDirective",
        "src": "111:58:77",
        "nodes": [],
        "absolutePath": "packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
        "file": "./ISuperfluidToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56839,
        "sourceUnit": 58030,
        "symbolAliases": [
          {
            "foreign": {
              "id": 56369,
              "name": "ISuperfluidToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 58029,
              "src": "120:16:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 56372,
        "nodeType": "ImportDirective",
        "src": "170:52:77",
        "nodes": [],
        "absolutePath": "packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
        "file": "../tokens/TokenInfo.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56839,
        "sourceUnit": 58110,
        "symbolAliases": [
          {
            "foreign": {
              "id": 56371,
              "name": "TokenInfo",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 58109,
              "src": "179:9:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 56374,
        "nodeType": "ImportDirective",
        "src": "223:75:77",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC777/IERC777.sol",
        "file": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56839,
        "sourceUnit": 31639,
        "symbolAliases": [
          {
            "foreign": {
              "id": 56373,
              "name": "IERC777",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31638,
              "src": "232:7:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 56376,
        "nodeType": "ImportDirective",
        "src": "299:72:77",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56839,
        "sourceUnit": 30991,
        "symbolAliases": [
          {
            "foreign": {
              "id": 56375,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30990,
              "src": "308:6:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 56378,
        "nodeType": "ImportDirective",
        "src": "372:64:77",
        "nodes": [],
        "absolutePath": "packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol",
        "file": "./IConstantOutflowNFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56839,
        "sourceUnit": 56142,
        "symbolAliases": [
          {
            "foreign": {
              "id": 56377,
              "name": "IConstantOutflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56141,
              "src": "381:19:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 56380,
        "nodeType": "ImportDirective",
        "src": "437:62:77",
        "nodes": [],
        "absolutePath": "packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol",
        "file": "./IConstantInflowNFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56839,
        "sourceUnit": 56088,
        "symbolAliases": [
          {
            "foreign": {
              "id": 56379,
              "name": "IConstantInflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56087,
              "src": "446:18:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 56382,
        "nodeType": "ImportDirective",
        "src": "500:52:77",
        "nodes": [],
        "absolutePath": "packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol",
        "file": "./IPoolAdminNFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56839,
        "sourceUnit": 56219,
        "symbolAliases": [
          {
            "foreign": {
              "id": 56381,
              "name": "IPoolAdminNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56218,
              "src": "509:13:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 56384,
        "nodeType": "ImportDirective",
        "src": "553:54:77",
        "nodes": [],
        "absolutePath": "packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol",
        "file": "./IPoolMemberNFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56839,
        "sourceUnit": 56222,
        "symbolAliases": [
          {
            "foreign": {
              "id": 56383,
              "name": "IPoolMemberNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56221,
              "src": "562:14:77",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 56838,
        "nodeType": "ContractDefinition",
        "src": "707:19511:77",
        "nodes": [
          {
            "id": 56395,
            "nodeType": "ErrorDefinition",
            "src": "958:54:77",
            "nodes": [],
            "errorSelector": "f7f02227",
            "name": "SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER",
            "nameLocation": "964:45:77",
            "parameters": {
              "id": 56394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1009:2:77"
            }
          },
          {
            "id": 56397,
            "nodeType": "ErrorDefinition",
            "src": "1037:48:77",
            "nodes": [],
            "errorSelector": "fe737d05",
            "name": "SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT",
            "nameLocation": "1043:39:77",
            "parameters": {
              "id": 56396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1082:2:77"
            }
          },
          {
            "id": 56399,
            "nodeType": "ErrorDefinition",
            "src": "1116:60:77",
            "nodes": [],
            "errorSelector": "e3e13698",
            "name": "SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED",
            "nameLocation": "1122:51:77",
            "parameters": {
              "id": 56398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1173:2:77"
            }
          },
          {
            "id": 56401,
            "nodeType": "ErrorDefinition",
            "src": "1195:40:77",
            "nodes": [],
            "errorSelector": "f79cf656",
            "name": "SUPER_TOKEN_NO_UNDERLYING_TOKEN",
            "nameLocation": "1201:31:77",
            "parameters": {
              "id": 56400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1232:2:77"
            }
          },
          {
            "id": 56403,
            "nodeType": "ErrorDefinition",
            "src": "1274:30:77",
            "nodes": [],
            "errorSelector": "7ffa6648",
            "name": "SUPER_TOKEN_ONLY_SELF",
            "nameLocation": "1280:21:77",
            "parameters": {
              "id": 56402,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1301:2:77"
            }
          },
          {
            "id": 56405,
            "nodeType": "ErrorDefinition",
            "src": "1353:30:77",
            "nodes": [],
            "errorSelector": "98f73704",
            "name": "SUPER_TOKEN_ONLY_HOST",
            "nameLocation": "1359:21:77",
            "parameters": {
              "id": 56404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1380:2:77"
            }
          },
          {
            "id": 56407,
            "nodeType": "ErrorDefinition",
            "src": "1432:35:77",
            "nodes": [],
            "errorSelector": "d9c7ed08",
            "name": "SUPER_TOKEN_ONLY_GOV_OWNER",
            "nameLocation": "1438:26:77",
            "parameters": {
              "id": 56406,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1464:2:77"
            }
          },
          {
            "id": 56409,
            "nodeType": "ErrorDefinition",
            "src": "1511:46:77",
            "nodes": [],
            "errorSelector": "81638627",
            "name": "SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS",
            "nameLocation": "1517:37:77",
            "parameters": {
              "id": 56408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1554:2:77"
            }
          },
          {
            "id": 56411,
            "nodeType": "ErrorDefinition",
            "src": "1590:44:77",
            "nodes": [],
            "errorSelector": "df070274",
            "name": "SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS",
            "nameLocation": "1596:35:77",
            "parameters": {
              "id": 56410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1631:2:77"
            }
          },
          {
            "id": 56413,
            "nodeType": "ErrorDefinition",
            "src": "1669:43:77",
            "nodes": [],
            "errorSelector": "ba2ab184",
            "name": "SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS",
            "nameLocation": "1675:34:77",
            "parameters": {
              "id": 56412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1709:2:77"
            }
          },
          {
            "id": 56415,
            "nodeType": "ErrorDefinition",
            "src": "1748:41:77",
            "nodes": [],
            "errorSelector": "0d243157",
            "name": "SUPER_TOKEN_MINT_TO_ZERO_ADDRESS",
            "nameLocation": "1754:32:77",
            "parameters": {
              "id": 56414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1786:2:77"
            }
          },
          {
            "id": 56417,
            "nodeType": "ErrorDefinition",
            "src": "1827:47:77",
            "nodes": [],
            "errorSelector": "eecd6c9b",
            "name": "SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS",
            "nameLocation": "1833:38:77",
            "parameters": {
              "id": 56416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1871:2:77"
            }
          },
          {
            "id": 56419,
            "nodeType": "ErrorDefinition",
            "src": "1906:45:77",
            "nodes": [],
            "errorSelector": "e219bd39",
            "name": "SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS",
            "nameLocation": "1912:36:77",
            "parameters": {
              "id": 56418,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1948:2:77"
            }
          },
          {
            "id": 56421,
            "nodeType": "ErrorDefinition",
            "src": "1985:46:77",
            "nodes": [],
            "errorSelector": "ef1b6ddf",
            "name": "SUPER_TOKEN_NFT_PROXY_ADDRESS_CHANGED",
            "nameLocation": "1991:37:77",
            "parameters": {
              "id": 56420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2028:2:77"
            }
          },
          {
            "id": 56434,
            "nodeType": "FunctionDefinition",
            "src": "2117:155:77",
            "nodes": [],
            "documentation": {
              "id": 56422,
              "nodeType": "StructuredDocumentation",
              "src": "2065:47:77",
              "text": " @dev Initialize the contract"
            },
            "functionSelector": "42fe0980",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "2126:10:77",
            "parameters": {
              "id": 56432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56425,
                  "mutability": "mutable",
                  "name": "underlyingToken",
                  "nameLocation": "2153:15:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56434,
                  "src": "2146:22:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$30990",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 56424,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56423,
                      "name": "IERC20",
                      "nameLocations": [
                        "2146:6:77"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30990,
                      "src": "2146:6:77"
                    },
                    "referencedDeclaration": 30990,
                    "src": "2146:6:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$30990",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56427,
                  "mutability": "mutable",
                  "name": "underlyingDecimals",
                  "nameLocation": "2184:18:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56434,
                  "src": "2178:24:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 56426,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2178:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56429,
                  "mutability": "mutable",
                  "name": "n",
                  "nameLocation": "2228:1:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56434,
                  "src": "2212:17:77",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 56428,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2212:6:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56431,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "2255:1:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56434,
                  "src": "2239:17:77",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 56430,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2239:6:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2136:126:77"
            },
            "returnParameters": {
              "id": 56433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2271:0:77"
            },
            "scope": 56838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56440,
            "nodeType": "FunctionDefinition",
            "src": "2463:76:77",
            "nodes": [],
            "functionSelector": "ef43d2c6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "CONSTANT_OUTFLOW_NFT",
            "nameLocation": "2472:20:77",
            "parameters": {
              "id": 56435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2492:2:77"
            },
            "returnParameters": {
              "id": 56439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56438,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56440,
                  "src": "2518:19:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantOutflowNFT_$56141",
                    "typeString": "contract IConstantOutflowNFT"
                  },
                  "typeName": {
                    "id": 56437,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56436,
                      "name": "IConstantOutflowNFT",
                      "nameLocations": [
                        "2518:19:77"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 56141,
                      "src": "2518:19:77"
                    },
                    "referencedDeclaration": 56141,
                    "src": "2518:19:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$56141",
                      "typeString": "contract IConstantOutflowNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2517:21:77"
            },
            "scope": 56838,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56446,
            "nodeType": "FunctionDefinition",
            "src": "2544:74:77",
            "nodes": [],
            "functionSelector": "4c5c0c85",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "CONSTANT_INFLOW_NFT",
            "nameLocation": "2553:19:77",
            "parameters": {
              "id": 56441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2572:2:77"
            },
            "returnParameters": {
              "id": 56445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56444,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56446,
                  "src": "2598:18:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantInflowNFT_$56087",
                    "typeString": "contract IConstantInflowNFT"
                  },
                  "typeName": {
                    "id": 56443,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56442,
                      "name": "IConstantInflowNFT",
                      "nameLocations": [
                        "2598:18:77"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 56087,
                      "src": "2598:18:77"
                    },
                    "referencedDeclaration": 56087,
                    "src": "2598:18:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantInflowNFT_$56087",
                      "typeString": "contract IConstantInflowNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2597:20:77"
            },
            "scope": 56838,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56455,
            "nodeType": "FunctionDefinition",
            "src": "2868:83:77",
            "nodes": [],
            "baseFunctions": [
              31524,
              58096
            ],
            "documentation": {
              "id": 56447,
              "nodeType": "StructuredDocumentation",
              "src": "2809:54:77",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2877:4:77",
            "overrides": {
              "id": 56451,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 56449,
                  "name": "IERC777",
                  "nameLocations": [
                    "2907:7:77"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31638,
                  "src": "2907:7:77"
                },
                {
                  "id": 56450,
                  "name": "TokenInfo",
                  "nameLocations": [
                    "2916:9:77"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58109,
                  "src": "2916:9:77"
                }
              ],
              "src": "2898:28:77"
            },
            "parameters": {
              "id": 56448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2881:2:77"
            },
            "returnParameters": {
              "id": 56454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56453,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56455,
                  "src": "2936:13:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 56452,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2936:6:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2935:15:77"
            },
            "scope": 56838,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56464,
            "nodeType": "FunctionDefinition",
            "src": "3064:85:77",
            "nodes": [],
            "baseFunctions": [
              31530,
              58102
            ],
            "documentation": {
              "id": 56456,
              "nodeType": "StructuredDocumentation",
              "src": "2957:102:77",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "3073:6:77",
            "overrides": {
              "id": 56460,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 56458,
                  "name": "IERC777",
                  "nameLocations": [
                    "3105:7:77"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31638,
                  "src": "3105:7:77"
                },
                {
                  "id": 56459,
                  "name": "TokenInfo",
                  "nameLocations": [
                    "3114:9:77"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58109,
                  "src": "3114:9:77"
                }
              ],
              "src": "3096:28:77"
            },
            "parameters": {
              "id": 56457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3079:2:77"
            },
            "returnParameters": {
              "id": 56463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56462,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56464,
                  "src": "3134:13:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 56461,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3134:6:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3133:15:77"
            },
            "scope": 56838,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56472,
            "nodeType": "FunctionDefinition",
            "src": "3829:70:77",
            "nodes": [],
            "baseFunctions": [
              58108
            ],
            "documentation": {
              "id": 56465,
              "nodeType": "StructuredDocumentation",
              "src": "3155:669:77",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n @custom:note SuperToken always uses 18 decimals.\n This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "3838:8:77",
            "overrides": {
              "id": 56468,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 56467,
                  "name": "TokenInfo",
                  "nameLocations": [
                    "3872:9:77"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58109,
                  "src": "3872:9:77"
                }
              ],
              "src": "3863:19:77"
            },
            "parameters": {
              "id": 56466,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3846:2:77"
            },
            "returnParameters": {
              "id": 56471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56470,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56472,
                  "src": "3892:5:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 56469,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3892:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3891:7:77"
            },
            "scope": 56838,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56481,
            "nodeType": "FunctionDefinition",
            "src": "4140:81:77",
            "nodes": [],
            "baseFunctions": [
              30939,
              31542
            ],
            "documentation": {
              "id": 56473,
              "nodeType": "StructuredDocumentation",
              "src": "4086:49:77",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "4149:11:77",
            "overrides": {
              "id": 56477,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 56475,
                  "name": "IERC777",
                  "nameLocations": [
                    "4186:7:77"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31638,
                  "src": "4186:7:77"
                },
                {
                  "id": 56476,
                  "name": "IERC20",
                  "nameLocations": [
                    "4195:6:77"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30990,
                  "src": "4195:6:77"
                }
              ],
              "src": "4177:25:77"
            },
            "parameters": {
              "id": 56474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4160:2:77"
            },
            "returnParameters": {
              "id": 56480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56479,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56481,
                  "src": "4212:7:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56478,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4212:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4211:9:77"
            },
            "scope": 56838,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56492,
            "nodeType": "FunctionDefinition",
            "src": "4315:101:77",
            "nodes": [],
            "baseFunctions": [
              30947,
              31550
            ],
            "documentation": {
              "id": 56482,
              "nodeType": "StructuredDocumentation",
              "src": "4227:83:77",
              "text": " @dev Returns the amount of tokens owned by an account (`owner`)."
            },
            "functionSelector": "70a08231",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "4324:9:77",
            "overrides": {
              "id": 56488,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 56486,
                  "name": "IERC777",
                  "nameLocations": [
                    "4374:7:77"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31638,
                  "src": "4374:7:77"
                },
                {
                  "id": 56487,
                  "name": "IERC20",
                  "nameLocations": [
                    "4383:6:77"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30990,
                  "src": "4383:6:77"
                }
              ],
              "src": "4365:25:77"
            },
            "parameters": {
              "id": 56485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56484,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4342:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56492,
                  "src": "4334:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56483,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4334:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4333:17:77"
            },
            "returnParameters": {
              "id": 56491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56490,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "4407:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56492,
                  "src": "4399:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56489,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4399:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4398:17:77"
            },
            "scope": 56838,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56504,
            "nodeType": "FunctionDefinition",
            "src": "4832:94:77",
            "nodes": [],
            "baseFunctions": [
              30957
            ],
            "documentation": {
              "id": 56493,
              "nodeType": "StructuredDocumentation",
              "src": "4594:233:77",
              "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n @return Returns Success a boolean value indicating whether the operation succeeded.\n @custom:emits a {Transfer} event."
            },
            "functionSelector": "a9059cbb",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "4841:8:77",
            "overrides": {
              "id": 56500,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 56499,
                  "name": "IERC20",
                  "nameLocations": [
                    "4903:6:77"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30990,
                  "src": "4903:6:77"
                }
              ],
              "src": "4894:16:77"
            },
            "parameters": {
              "id": 56498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56495,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4858:9:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56504,
                  "src": "4850:17:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56494,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4850:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56497,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4877:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56504,
                  "src": "4869:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56496,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4869:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4849:35:77"
            },
            "returnParameters": {
              "id": 56503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56502,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56504,
                  "src": "4920:4:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 56501,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4920:4:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4919:6:77"
            },
            "scope": 56838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56516,
            "nodeType": "FunctionDefinition",
            "src": "5225:100:77",
            "nodes": [],
            "baseFunctions": [
              30967
            ],
            "documentation": {
              "id": 56505,
              "nodeType": "StructuredDocumentation",
              "src": "4932:288:77",
              "text": " @dev Returns the remaining number of tokens that `spender` will be\n         allowed to spend on behalf of `owner` through {transferFrom}. This is\n         zero by default.\n @notice This value changes when {approve} or {transferFrom} are called."
            },
            "functionSelector": "dd62ed3e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "5234:9:77",
            "overrides": {
              "id": 56512,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 56511,
                  "name": "IERC20",
                  "nameLocations": [
                    "5294:6:77"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30990,
                  "src": "5294:6:77"
                }
              ],
              "src": "5285:16:77"
            },
            "parameters": {
              "id": 56510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56507,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "5252:5:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56516,
                  "src": "5244:13:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56506,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5244:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56509,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "5267:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56516,
                  "src": "5259:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56508,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5259:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5243:32:77"
            },
            "returnParameters": {
              "id": 56515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56514,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56516,
                  "src": "5316:7:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56513,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5316:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5315:9:77"
            },
            "scope": 56838,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56528,
            "nodeType": "FunctionDefinition",
            "src": "6004:91:77",
            "nodes": [],
            "baseFunctions": [
              30977
            ],
            "documentation": {
              "id": 56517,
              "nodeType": "StructuredDocumentation",
              "src": "5331:668:77",
              "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n @return Returns Success a boolean value indicating whether the operation succeeded.\n @custom:note Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n @custom:emits an {Approval} event."
            },
            "functionSelector": "095ea7b3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "6013:7:77",
            "overrides": {
              "id": 56524,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 56523,
                  "name": "IERC20",
                  "nameLocations": [
                    "6072:6:77"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30990,
                  "src": "6072:6:77"
                }
              ],
              "src": "6063:16:77"
            },
            "parameters": {
              "id": 56522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56519,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6029:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56528,
                  "src": "6021:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56518,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6021:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56521,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6046:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56528,
                  "src": "6038:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56520,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6038:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6020:33:77"
            },
            "returnParameters": {
              "id": 56527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56526,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56528,
                  "src": "6089:4:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 56525,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6089:4:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6088:6:77"
            },
            "scope": 56838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56542,
            "nodeType": "FunctionDefinition",
            "src": "6442:114:77",
            "nodes": [],
            "baseFunctions": [
              30989
            ],
            "documentation": {
              "id": 56529,
              "nodeType": "StructuredDocumentation",
              "src": "6101:336:77",
              "text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n         allowance mechanism. `amount` is then deducted from the caller's\n         allowance.\n @return Returns Success a boolean value indicating whether the operation succeeded.\n @custom:emits a {Transfer} event."
            },
            "functionSelector": "23b872dd",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "6451:12:77",
            "overrides": {
              "id": 56538,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 56537,
                  "name": "IERC20",
                  "nameLocations": [
                    "6533:6:77"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30990,
                  "src": "6533:6:77"
                }
              ],
              "src": "6524:16:77"
            },
            "parameters": {
              "id": 56536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56531,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "6472:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56542,
                  "src": "6464:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56530,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6464:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56533,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "6488:9:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56542,
                  "src": "6480:17:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56532,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6480:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56535,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6507:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56542,
                  "src": "6499:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56534,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6499:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6463:51:77"
            },
            "returnParameters": {
              "id": 56541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56540,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56542,
                  "src": "6550:4:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 56539,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6550:4:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6549:6:77"
            },
            "scope": 56838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56552,
            "nodeType": "FunctionDefinition",
            "src": "6960:88:77",
            "nodes": [],
            "documentation": {
              "id": 56543,
              "nodeType": "StructuredDocumentation",
              "src": "6562:393:77",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n @custom:emits an {Approval} event indicating the updated allowance.\n @custom:requirements \n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nameLocation": "6969:17:77",
            "parameters": {
              "id": 56548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56545,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6995:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56552,
                  "src": "6987:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56544,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6987:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56547,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nameLocation": "7012:10:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56552,
                  "src": "7004:18:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56546,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7004:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6986:37:77"
            },
            "returnParameters": {
              "id": 56551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56550,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56552,
                  "src": "7042:4:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 56549,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7042:4:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7041:6:77"
            },
            "scope": 56838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56562,
            "nodeType": "FunctionDefinition",
            "src": "7545:93:77",
            "nodes": [],
            "documentation": {
              "id": 56553,
              "nodeType": "StructuredDocumentation",
              "src": "7054:485:77",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n @custom:emits an {Approval} event indicating the updated allowance.\n @custom:requirements \n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nameLocation": "7554:17:77",
            "parameters": {
              "id": 56558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56555,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7580:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56562,
                  "src": "7572:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56554,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7572:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56557,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nameLocation": "7597:15:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56562,
                  "src": "7589:23:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56556,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7589:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7571:42:77"
            },
            "returnParameters": {
              "id": 56561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56560,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56562,
                  "src": "7632:4:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 56559,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7632:4:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7631:6:77"
            },
            "scope": 56838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56570,
            "nodeType": "FunctionDefinition",
            "src": "8137:73:77",
            "nodes": [],
            "baseFunctions": [
              31536
            ],
            "documentation": {
              "id": 56563,
              "nodeType": "StructuredDocumentation",
              "src": "7817:315:77",
              "text": " @dev Returns the smallest part of the token that is not divisible. This\n         means all token operations (creation, movement and destruction) must have\n         amounts that are a multiple of this number.\n @custom:note For super token contracts, this value is always 1"
            },
            "functionSelector": "556f0dc7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "granularity",
            "nameLocation": "8146:11:77",
            "overrides": {
              "id": 56566,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 56565,
                  "name": "IERC777",
                  "nameLocations": [
                    "8183:7:77"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31638,
                  "src": "8183:7:77"
                }
              ],
              "src": "8174:17:77"
            },
            "parameters": {
              "id": 56564,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8157:2:77"
            },
            "returnParameters": {
              "id": 56569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56568,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56570,
                  "src": "8201:7:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56567,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8201:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8200:9:77"
            },
            "scope": 56838,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56582,
            "nodeType": "FunctionDefinition",
            "src": "8831:97:77",
            "nodes": [],
            "baseFunctions": [
              31560
            ],
            "documentation": {
              "id": 56571,
              "nodeType": "StructuredDocumentation",
              "src": "8216:610:77",
              "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n @dev If send or receive hooks are registered for the caller and `recipient`,\n      the corresponding functions will be called with `data` and empty\n      `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n @custom:emits a {Sent} event.\n @custom:requirements \n - the caller must have at least `amount` tokens.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
            },
            "functionSelector": "9bd9bbc6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "send",
            "nameLocation": "8840:4:77",
            "overrides": {
              "id": 56580,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 56579,
                  "name": "IERC777",
                  "nameLocations": [
                    "8919:7:77"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31638,
                  "src": "8919:7:77"
                }
              ],
              "src": "8910:17:77"
            },
            "parameters": {
              "id": 56578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56573,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "8853:9:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56582,
                  "src": "8845:17:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56572,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8845:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56575,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8872:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56582,
                  "src": "8864:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56574,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8864:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56577,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "8895:4:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56582,
                  "src": "8880:19:77",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 56576,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8880:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8844:56:77"
            },
            "returnParameters": {
              "id": 56581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8927:0:77"
            },
            "scope": 56838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56592,
            "nodeType": "FunctionDefinition",
            "src": "9412:78:77",
            "nodes": [],
            "baseFunctions": [
              31568
            ],
            "documentation": {
              "id": 56583,
              "nodeType": "StructuredDocumentation",
              "src": "8934:473:77",
              "text": " @dev Destroys `amount` tokens from the caller's account, reducing the\n total supply and transfers the underlying token to the caller's account.\n If a send hook is registered for the caller, the corresponding function\n will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n @custom:emits a {Burned} event.\n @custom:requirements \n - the caller must have at least `amount` tokens."
            },
            "functionSelector": "fe9d9303",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "9421:4:77",
            "overrides": {
              "id": 56590,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 56589,
                  "name": "IERC777",
                  "nameLocations": [
                    "9481:7:77"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31638,
                  "src": "9481:7:77"
                }
              ],
              "src": "9472:17:77"
            },
            "parameters": {
              "id": 56588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56585,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9434:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56592,
                  "src": "9426:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56584,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9426:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56587,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "9457:4:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56592,
                  "src": "9442:19:77",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 56586,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9442:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9425:37:77"
            },
            "returnParameters": {
              "id": 56591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9489:0:77"
            },
            "scope": 56838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56604,
            "nodeType": "FunctionDefinition",
            "src": "9750:109:77",
            "nodes": [],
            "baseFunctions": [
              31578
            ],
            "documentation": {
              "id": 56593,
              "nodeType": "StructuredDocumentation",
              "src": "9496:249:77",
              "text": " @dev Returns true if an account is an operator of `tokenHolder`.\n Operators can send and burn tokens on behalf of their owners. All\n accounts are their own operator.\n See {operatorSend} and {operatorBurn}."
            },
            "functionSelector": "d95b6371",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isOperatorFor",
            "nameLocation": "9759:13:77",
            "overrides": {
              "id": 56600,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 56599,
                  "name": "IERC777",
                  "nameLocations": [
                    "9830:7:77"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31638,
                  "src": "9830:7:77"
                }
              ],
              "src": "9821:17:77"
            },
            "parameters": {
              "id": 56598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56595,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "9781:8:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56604,
                  "src": "9773:16:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56594,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9773:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56597,
                  "mutability": "mutable",
                  "name": "tokenHolder",
                  "nameLocation": "9799:11:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56604,
                  "src": "9791:19:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56596,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9791:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9772:39:77"
            },
            "returnParameters": {
              "id": 56603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56602,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56604,
                  "src": "9853:4:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 56601,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9853:4:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9852:6:77"
            },
            "scope": 56838,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56612,
            "nodeType": "FunctionDefinition",
            "src": "10113:72:77",
            "nodes": [],
            "baseFunctions": [
              31584
            ],
            "documentation": {
              "id": 56605,
              "nodeType": "StructuredDocumentation",
              "src": "9865:243:77",
              "text": " @dev Make an account an operator of the caller.\n See {isOperatorFor}.\n @custom:emits an {AuthorizedOperator} event.\n @custom:requirements \n - `operator` cannot be calling address."
            },
            "functionSelector": "959b8c3f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "authorizeOperator",
            "nameLocation": "10122:17:77",
            "overrides": {
              "id": 56610,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 56609,
                  "name": "IERC777",
                  "nameLocations": [
                    "10176:7:77"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31638,
                  "src": "10176:7:77"
                }
              ],
              "src": "10167:17:77"
            },
            "parameters": {
              "id": 56608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56607,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "10148:8:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56612,
                  "src": "10140:16:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56606,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10140:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10139:18:77"
            },
            "returnParameters": {
              "id": 56611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10184:0:77"
            },
            "scope": 56838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56620,
            "nodeType": "FunctionDefinition",
            "src": "10467:69:77",
            "nodes": [],
            "baseFunctions": [
              31590
            ],
            "documentation": {
              "id": 56613,
              "nodeType": "StructuredDocumentation",
              "src": "10191:271:77",
              "text": " @dev Revoke an account's operator status for the caller.\n See {isOperatorFor} and {defaultOperators}.\n @custom:emits a {RevokedOperator} event.\n @custom:requirements \n - `operator` cannot be calling address."
            },
            "functionSelector": "fad8b32a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "revokeOperator",
            "nameLocation": "10476:14:77",
            "overrides": {
              "id": 56618,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 56617,
                  "name": "IERC777",
                  "nameLocations": [
                    "10527:7:77"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31638,
                  "src": "10527:7:77"
                }
              ],
              "src": "10518:17:77"
            },
            "parameters": {
              "id": 56616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56615,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "10499:8:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56620,
                  "src": "10491:16:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10491:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10490:18:77"
            },
            "returnParameters": {
              "id": 56619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10535:0:77"
            },
            "scope": 56838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56629,
            "nodeType": "FunctionDefinition",
            "src": "10885:87:77",
            "nodes": [],
            "baseFunctions": [
              31597
            ],
            "documentation": {
              "id": 56621,
              "nodeType": "StructuredDocumentation",
              "src": "10542:338:77",
              "text": " @dev Returns the list of default operators. These accounts are operators\n for all token holders, even if {authorizeOperator} was never called on\n them.\n This list is immutable, but individual holders may revoke these via\n {revokeOperator}, in which case {isOperatorFor} will return false."
            },
            "functionSelector": "06e48538",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "defaultOperators",
            "nameLocation": "10894:16:77",
            "overrides": {
              "id": 56624,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 56623,
                  "name": "IERC777",
                  "nameLocations": [
                    "10931:7:77"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31638,
                  "src": "10931:7:77"
                }
              ],
              "src": "10922:17:77"
            },
            "parameters": {
              "id": 56622,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10910:2:77"
            },
            "returnParameters": {
              "id": 56628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56627,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56629,
                  "src": "10954:16:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 56625,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "10954:7:77",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 56626,
                    "nodeType": "ArrayTypeName",
                    "src": "10954:9:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10953:18:77"
            },
            "scope": 56838,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56645,
            "nodeType": "FunctionDefinition",
            "src": "11707:196:77",
            "nodes": [],
            "baseFunctions": [
              31611
            ],
            "documentation": {
              "id": 56630,
              "nodeType": "StructuredDocumentation",
              "src": "10978:724:77",
              "text": " @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n be an operator of `sender`.\n If send or receive hooks are registered for `sender` and `recipient`,\n the corresponding functions will be called with `data` and\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n @custom:emits a {Sent} event.\n @custom:requirements \n - `sender` cannot be the zero address.\n - `sender` must have at least `amount` tokens.\n - the caller must be an operator for `sender`.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
            },
            "functionSelector": "62ad1b83",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "operatorSend",
            "nameLocation": "11716:12:77",
            "overrides": {
              "id": 56643,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 56642,
                  "name": "IERC777",
                  "nameLocations": [
                    "11894:7:77"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31638,
                  "src": "11894:7:77"
                }
              ],
              "src": "11885:17:77"
            },
            "parameters": {
              "id": 56641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56632,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "11746:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56645,
                  "src": "11738:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56631,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11738:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56634,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "11770:9:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56645,
                  "src": "11762:17:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56633,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11762:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56636,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11797:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56645,
                  "src": "11789:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56635,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11789:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56638,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "11828:4:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56645,
                  "src": "11813:19:77",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 56637,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11813:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56640,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "11857:12:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56645,
                  "src": "11842:27:77",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 56639,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11842:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11728:147:77"
            },
            "returnParameters": {
              "id": 56644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11902:0:77"
            },
            "scope": 56838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56659,
            "nodeType": "FunctionDefinition",
            "src": "12456:170:77",
            "nodes": [],
            "baseFunctions": [
              31623
            ],
            "documentation": {
              "id": 56646,
              "nodeType": "StructuredDocumentation",
              "src": "11909:542:77",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the total supply.\n The caller must be an operator of `account`.\n If a send hook is registered for `account`, the corresponding function\n will be called with `data` and `operatorData`. See {IERC777Sender}.\n @custom:emits a {Burned} event.\n @custom:requirements \n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens.\n - the caller must be an operator for `account`."
            },
            "functionSelector": "fc673c4f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "operatorBurn",
            "nameLocation": "12465:12:77",
            "overrides": {
              "id": 56657,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 56656,
                  "name": "IERC777",
                  "nameLocations": [
                    "12617:7:77"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31638,
                  "src": "12617:7:77"
                }
              ],
              "src": "12608:17:77"
            },
            "parameters": {
              "id": 56655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56648,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "12495:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56659,
                  "src": "12487:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12487:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56650,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12520:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56659,
                  "src": "12512:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56649,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12512:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56652,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "12551:4:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56659,
                  "src": "12536:19:77",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 56651,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12536:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56654,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "12580:12:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56659,
                  "src": "12565:27:77",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 56653,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12565:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12477:121:77"
            },
            "returnParameters": {
              "id": 56658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12625:0:77"
            },
            "scope": 56838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56669,
            "nodeType": "FunctionDefinition",
            "src": "12946:113:77",
            "nodes": [],
            "documentation": {
              "id": 56660,
              "nodeType": "StructuredDocumentation",
              "src": "12834:107:77",
              "text": " @dev Mint new tokens for the account\n @custom:modifiers \n  - onlySelf"
            },
            "functionSelector": "c68d4283",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "selfMint",
            "nameLocation": "12955:8:77",
            "parameters": {
              "id": 56667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56662,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "12981:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56669,
                  "src": "12973:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56661,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12973:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56664,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13006:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56669,
                  "src": "12998:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12998:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56666,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "13035:8:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56669,
                  "src": "13022:21:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 56665,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13022:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12963:86:77"
            },
            "returnParameters": {
              "id": 56668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13058:0:77"
            },
            "scope": 56838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56679,
            "nodeType": "FunctionDefinition",
            "src": "13175:109:77",
            "nodes": [],
            "documentation": {
              "id": 56670,
              "nodeType": "StructuredDocumentation",
              "src": "13064:107:77",
              "text": " @dev Burn existing tokens for the account\n @custom:modifiers \n  - onlySelf"
            },
            "functionSelector": "9d876741",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "selfBurn",
            "nameLocation": "13184:8:77",
            "parameters": {
              "id": 56677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56672,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "13209:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56679,
                  "src": "13201:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56671,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13201:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56674,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13233:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56679,
                  "src": "13225:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56673,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13225:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56676,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "13261:8:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56679,
                  "src": "13248:21:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 56675,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13248:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13192:82:77"
            },
            "returnParameters": {
              "id": 56678,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13283:0:77"
            },
            "scope": 56838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56691,
            "nodeType": "FunctionDefinition",
            "src": "13538:140:77",
            "nodes": [],
            "documentation": {
              "id": 56680,
              "nodeType": "StructuredDocumentation",
              "src": "13289:245:77",
              "text": " @dev Transfer `amount` tokens from the `sender` to `recipient`.\n If `spender` isn't the same as `sender`, checks if `spender` has allowance to\n spend tokens of `sender`.\n @custom:modifiers \n  - onlySelf"
            },
            "functionSelector": "41b706be",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "selfTransferFrom",
            "nameLocation": "13547:16:77",
            "parameters": {
              "id": 56689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56682,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "13581:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56691,
                  "src": "13573:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56681,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13573:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56684,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "13605:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56691,
                  "src": "13597:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13597:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56686,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "13630:9:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56691,
                  "src": "13622:17:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56685,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13622:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56688,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13657:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56691,
                  "src": "13649:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56687,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13649:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13563:105:77"
            },
            "returnParameters": {
              "id": 56690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13677:0:77"
            },
            "scope": 56838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56701,
            "nodeType": "FunctionDefinition",
            "src": "13832:112:77",
            "nodes": [],
            "documentation": {
              "id": 56692,
              "nodeType": "StructuredDocumentation",
              "src": "13683:145:77",
              "text": " @dev Give `spender`, `amount` allowance to spend the tokens of\n `account`.\n @custom:modifiers \n  - onlySelf"
            },
            "functionSelector": "66a12fb6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "selfApproveFor",
            "nameLocation": "13841:14:77",
            "parameters": {
              "id": 56699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56694,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "13873:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56701,
                  "src": "13865:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56693,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13865:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56696,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "13898:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56701,
                  "src": "13890:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56695,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13890:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56698,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13923:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56701,
                  "src": "13915:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56697,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13915:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13855:79:77"
            },
            "returnParameters": {
              "id": 56700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13943:0:77"
            },
            "scope": 56838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56707,
            "nodeType": "FunctionDefinition",
            "src": "14237:49:77",
            "nodes": [],
            "documentation": {
              "id": 56702,
              "nodeType": "StructuredDocumentation",
              "src": "14145:87:77",
              "text": " @dev Transfer all available balance from `msg.sender` to `recipient`"
            },
            "functionSelector": "a3a7e7f3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferAll",
            "nameLocation": "14246:11:77",
            "parameters": {
              "id": 56705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56704,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "14266:9:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56707,
                  "src": "14258:17:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56703,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14258:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14257:19:77"
            },
            "returnParameters": {
              "id": 56706,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14285:0:77"
            },
            "scope": 56838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56713,
            "nodeType": "FunctionDefinition",
            "src": "14590:71:77",
            "nodes": [],
            "documentation": {
              "id": 56708,
              "nodeType": "StructuredDocumentation",
              "src": "14475:110:77",
              "text": " @dev Return the underlying token contract\n @return tokenAddr Underlying token address"
            },
            "functionSelector": "ee719bc8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getUnderlyingToken",
            "nameLocation": "14599:18:77",
            "parameters": {
              "id": 56709,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14617:2:77"
            },
            "returnParameters": {
              "id": 56712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56711,
                  "mutability": "mutable",
                  "name": "tokenAddr",
                  "nameLocation": "14650:9:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56713,
                  "src": "14642:17:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56710,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14642:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14641:19:77"
            },
            "scope": 56838,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56719,
            "nodeType": "FunctionDefinition",
            "src": "14934:42:77",
            "nodes": [],
            "documentation": {
              "id": 56714,
              "nodeType": "StructuredDocumentation",
              "src": "14667:262:77",
              "text": " @dev Upgrade ERC20 to SuperToken.\n @param amount Number of tokens to be upgraded (in 18 decimals)\n @custom:note It will use `transferFrom` to get tokens. Before calling this\n function you should `approve` this contract"
            },
            "functionSelector": "45977d03",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "upgrade",
            "nameLocation": "14943:7:77",
            "parameters": {
              "id": 56717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56716,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "14959:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56719,
                  "src": "14951:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56715,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14951:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14950:16:77"
            },
            "returnParameters": {
              "id": 56718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14975:0:77"
            },
            "scope": 56838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56729,
            "nodeType": "FunctionDefinition",
            "src": "15666:77:77",
            "nodes": [],
            "documentation": {
              "id": 56720,
              "nodeType": "StructuredDocumentation",
              "src": "14982:679:77",
              "text": " @dev Upgrade ERC20 to SuperToken and transfer immediately\n @param to The account to receive upgraded tokens\n @param amount Number of tokens to be upgraded (in 18 decimals)\n @param data User data for the TokensRecipient callback\n @custom:note It will use `transferFrom` to get tokens. Before calling this\n function you should `approve` this contract\n \n @custom:warning\n - there is potential of reentrancy IF the \"to\" account is a registered ERC777 recipient.\n @custom:requirements \n - if `data` is NOT empty AND `to` is a contract, it MUST be a registered ERC777 recipient otherwise it reverts."
            },
            "functionSelector": "5b9d09cc",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "upgradeTo",
            "nameLocation": "15675:9:77",
            "parameters": {
              "id": 56727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56722,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "15693:2:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56729,
                  "src": "15685:10:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56721,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15685:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56724,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "15705:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56729,
                  "src": "15697:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56723,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15697:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56726,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "15728:4:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56729,
                  "src": "15713:19:77",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 56725,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15713:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15684:49:77"
            },
            "returnParameters": {
              "id": 56728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15742:0:77"
            },
            "scope": 56838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56736,
            "nodeType": "EventDefinition",
            "src": "15920:83:77",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 56730,
              "nodeType": "StructuredDocumentation",
              "src": "15749:166:77",
              "text": " @dev Token upgrade event\n @param account Account where tokens are upgraded to\n @param amount Amount of tokens upgraded (in 18 decimals)"
            },
            "eventSelector": "25ca84076773b0455db53621c459ddc84fe40840e4932a62706a032566f399df",
            "name": "TokenUpgraded",
            "nameLocation": "15926:13:77",
            "parameters": {
              "id": 56735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56732,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "15965:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56736,
                  "src": "15949:23:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56731,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15949:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56734,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "15990:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56736,
                  "src": "15982:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56733,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15982:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15939:63:77"
            }
          },
          {
            "id": 56742,
            "nodeType": "FunctionDefinition",
            "src": "16172:44:77",
            "nodes": [],
            "documentation": {
              "id": 56737,
              "nodeType": "StructuredDocumentation",
              "src": "16009:158:77",
              "text": " @dev Downgrade SuperToken to ERC20.\n @dev It will call transfer to send tokens\n @param amount Number of tokens to be downgraded"
            },
            "functionSelector": "11bcc81e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "downgrade",
            "nameLocation": "16181:9:77",
            "parameters": {
              "id": 56740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56739,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "16199:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56742,
                  "src": "16191:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56738,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16191:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16190:16:77"
            },
            "returnParameters": {
              "id": 56741,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16215:0:77"
            },
            "scope": 56838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56750,
            "nodeType": "FunctionDefinition",
            "src": "16435:58:77",
            "nodes": [],
            "documentation": {
              "id": 56743,
              "nodeType": "StructuredDocumentation",
              "src": "16222:208:77",
              "text": " @dev Downgrade SuperToken to ERC20 and transfer immediately\n @param to The account to receive downgraded tokens\n @param amount Number of tokens to be downgraded (in 18 decimals)"
            },
            "functionSelector": "83ba2525",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "downgradeTo",
            "nameLocation": "16444:11:77",
            "parameters": {
              "id": 56748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56745,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "16464:2:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56750,
                  "src": "16456:10:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56744,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16456:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56747,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "16476:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56750,
                  "src": "16468:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16468:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16455:28:77"
            },
            "returnParameters": {
              "id": 56749,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16492:0:77"
            },
            "scope": 56838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56757,
            "nodeType": "EventDefinition",
            "src": "16656:85:77",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 56751,
              "nodeType": "StructuredDocumentation",
              "src": "16499:152:77",
              "text": " @dev Token downgrade event\n @param account Account whose tokens are downgraded\n @param amount Amount of tokens downgraded"
            },
            "eventSelector": "3bc27981aebbb57f9247dc00fde9d6cd91e4b230083fec3238fedbcba1f9ab3d",
            "name": "TokenDowngraded",
            "nameLocation": "16662:15:77",
            "parameters": {
              "id": 56756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56753,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "16703:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56757,
                  "src": "16687:23:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56752,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16687:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56755,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "16728:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56757,
                  "src": "16720:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56754,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16720:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16677:63:77"
            }
          },
          {
            "id": 56767,
            "nodeType": "FunctionDefinition",
            "src": "17212:115:77",
            "nodes": [],
            "documentation": {
              "id": 56758,
              "nodeType": "StructuredDocumentation",
              "src": "16930:277:77",
              "text": " @dev Perform ERC20 approve by host contract.\n @param account The account owner to be approved.\n @param spender The spender of account owner's funds.\n @param amount Number of tokens to be approved.\n @custom:modifiers \n  - onlyHost"
            },
            "functionSelector": "62aa5287",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "operationApprove",
            "nameLocation": "17221:16:77",
            "parameters": {
              "id": 56765,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56760,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "17255:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56767,
                  "src": "17247:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17247:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56762,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "17280:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56767,
                  "src": "17272:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56761,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17272:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56764,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "17305:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56767,
                  "src": "17297:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56763,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17297:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17237:80:77"
            },
            "returnParameters": {
              "id": 56766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17326:0:77"
            },
            "scope": 56838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56776,
            "nodeType": "FunctionDefinition",
            "src": "17333:129:77",
            "nodes": [],
            "functionSelector": "4b2763b3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "operationIncreaseAllowance",
            "nameLocation": "17342:26:77",
            "parameters": {
              "id": 56774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56769,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "17386:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56776,
                  "src": "17378:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17378:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56771,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "17411:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56776,
                  "src": "17403:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56770,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17403:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56773,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nameLocation": "17436:10:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56776,
                  "src": "17428:18:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56772,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17428:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17368:84:77"
            },
            "returnParameters": {
              "id": 56775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17461:0:77"
            },
            "scope": 56838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56785,
            "nodeType": "FunctionDefinition",
            "src": "17468:134:77",
            "nodes": [],
            "functionSelector": "c780fd82",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "operationDecreaseAllowance",
            "nameLocation": "17477:26:77",
            "parameters": {
              "id": 56783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56778,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "17521:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56785,
                  "src": "17513:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56777,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17513:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56780,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "17546:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56785,
                  "src": "17538:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56779,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17538:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56782,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nameLocation": "17571:15:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56785,
                  "src": "17563:23:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56781,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17563:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17503:89:77"
            },
            "returnParameters": {
              "id": 56784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17601:0:77"
            },
            "scope": 56838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56797,
            "nodeType": "FunctionDefinition",
            "src": "17956:147:77",
            "nodes": [],
            "documentation": {
              "id": 56786,
              "nodeType": "StructuredDocumentation",
              "src": "17608:343:77",
              "text": " @dev Perform ERC20 transferFrom by host contract.\n @param account The account to spend sender's funds.\n @param spender The account where the funds is sent from.\n @param recipient The recipient of the funds.\n @param amount Number of tokens to be transferred.\n @custom:modifiers \n  - onlyHost"
            },
            "functionSelector": "16d055d6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "operationTransferFrom",
            "nameLocation": "17965:21:77",
            "parameters": {
              "id": 56795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56788,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "18004:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56797,
                  "src": "17996:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56787,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17996:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56790,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "18029:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56797,
                  "src": "18021:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56789,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18021:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56792,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "18054:9:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56797,
                  "src": "18046:17:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56791,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18046:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56794,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "18081:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56797,
                  "src": "18073:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56793,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18073:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17986:107:77"
            },
            "returnParameters": {
              "id": 56796,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18102:0:77"
            },
            "scope": 56838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56809,
            "nodeType": "FunctionDefinition",
            "src": "18439:141:77",
            "nodes": [],
            "documentation": {
              "id": 56798,
              "nodeType": "StructuredDocumentation",
              "src": "18109:325:77",
              "text": " @dev Perform ERC777 send by host contract.\n @param spender The account where the funds is sent from.\n @param recipient The recipient of the funds.\n @param amount Number of tokens to be transferred.\n @param data Arbitrary user inputted data\n @custom:modifiers \n  - onlyHost"
            },
            "functionSelector": "ca0c1e7f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "operationSend",
            "nameLocation": "18448:13:77",
            "parameters": {
              "id": 56807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56800,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "18479:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56809,
                  "src": "18471:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56799,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18471:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56802,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "18504:9:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56809,
                  "src": "18496:17:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56801,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18496:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56804,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "18531:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56809,
                  "src": "18523:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56803,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18523:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56806,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "18560:4:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56809,
                  "src": "18547:17:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 56805,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "18547:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18461:109:77"
            },
            "returnParameters": {
              "id": 56808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18579:0:77"
            },
            "scope": 56838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56817,
            "nodeType": "FunctionDefinition",
            "src": "18824:68:77",
            "nodes": [],
            "documentation": {
              "id": 56810,
              "nodeType": "StructuredDocumentation",
              "src": "18586:233:77",
              "text": " @dev Upgrade ERC20 to SuperToken by host contract.\n @param account The account to be changed.\n @param amount Number of tokens to be upgraded (in 18 decimals)\n @custom:modifiers \n  - onlyHost"
            },
            "functionSelector": "ca789464",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "operationUpgrade",
            "nameLocation": "18833:16:77",
            "parameters": {
              "id": 56815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56812,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "18858:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56817,
                  "src": "18850:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18850:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56814,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "18875:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56817,
                  "src": "18867:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56813,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18867:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18849:33:77"
            },
            "returnParameters": {
              "id": 56816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18891:0:77"
            },
            "scope": 56838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56825,
            "nodeType": "FunctionDefinition",
            "src": "19140:70:77",
            "nodes": [],
            "documentation": {
              "id": 56818,
              "nodeType": "StructuredDocumentation",
              "src": "18898:237:77",
              "text": " @dev Downgrade ERC20 to SuperToken by host contract.\n @param account The account to be changed.\n @param amount Number of tokens to be downgraded (in 18 decimals)\n @custom:modifiers \n  - onlyHost"
            },
            "functionSelector": "245887fc",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "operationDowngrade",
            "nameLocation": "19149:18:77",
            "parameters": {
              "id": 56823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56820,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "19176:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56825,
                  "src": "19168:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56819,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19168:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56822,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "19193:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56825,
                  "src": "19185:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56821,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19185:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19167:33:77"
            },
            "returnParameters": {
              "id": 56824,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19209:0:77"
            },
            "scope": 56838,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56831,
            "nodeType": "EventDefinition",
            "src": "19370:94:77",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 56826,
              "nodeType": "StructuredDocumentation",
              "src": "19239:126:77",
              "text": " @dev Constant Outflow NFT proxy created event\n @param constantOutflowNFT constant outflow nft address"
            },
            "eventSelector": "cf554eb342edf010a94e07701ae91e99e90b769f649f03aeb1153654ddd43c01",
            "name": "ConstantOutflowNFTCreated",
            "nameLocation": "19376:25:77",
            "parameters": {
              "id": 56830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56829,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "constantOutflowNFT",
                  "nameLocation": "19439:18:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56831,
                  "src": "19411:46:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantOutflowNFT_$56141",
                    "typeString": "contract IConstantOutflowNFT"
                  },
                  "typeName": {
                    "id": 56828,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56827,
                      "name": "IConstantOutflowNFT",
                      "nameLocations": [
                        "19411:19:77"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 56141,
                      "src": "19411:19:77"
                    },
                    "referencedDeclaration": 56141,
                    "src": "19411:19:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$56141",
                      "typeString": "contract IConstantOutflowNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19401:62:77"
            }
          },
          {
            "id": 56837,
            "nodeType": "EventDefinition",
            "src": "19598:91:77",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 56832,
              "nodeType": "StructuredDocumentation",
              "src": "19470:123:77",
              "text": " @dev Constant Inflow NFT proxy created event\n @param constantInflowNFT constant inflow nft address"
            },
            "eventSelector": "8837af285f4d380af9227df9ebafa13d992b487fa6d7a4366bd4154576085b89",
            "name": "ConstantInflowNFTCreated",
            "nameLocation": "19604:24:77",
            "parameters": {
              "id": 56836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56835,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "constantInflowNFT",
                  "nameLocation": "19665:17:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 56837,
                  "src": "19638:44:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantInflowNFT_$56087",
                    "typeString": "contract IConstantInflowNFT"
                  },
                  "typeName": {
                    "id": 56834,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56833,
                      "name": "IConstantInflowNFT",
                      "nameLocations": [
                        "19638:18:77"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 56087,
                      "src": "19638:18:77"
                    },
                    "referencedDeclaration": 56087,
                    "src": "19638:18:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantInflowNFT_$56087",
                      "typeString": "contract IConstantInflowNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19628:60:77"
            }
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 56386,
              "name": "ISuperfluidToken",
              "nameLocations": [
                "732:16:77"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 58029,
              "src": "732:16:77"
            },
            "id": 56387,
            "nodeType": "InheritanceSpecifier",
            "src": "732:16:77"
          },
          {
            "baseName": {
              "id": 56388,
              "name": "TokenInfo",
              "nameLocations": [
                "750:9:77"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 58109,
              "src": "750:9:77"
            },
            "id": 56389,
            "nodeType": "InheritanceSpecifier",
            "src": "750:9:77"
          },
          {
            "baseName": {
              "id": 56390,
              "name": "IERC20",
              "nameLocations": [
                "761:6:77"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30990,
              "src": "761:6:77"
            },
            "id": 56391,
            "nodeType": "InheritanceSpecifier",
            "src": "761:6:77"
          },
          {
            "baseName": {
              "id": 56392,
              "name": "IERC777",
              "nameLocations": [
                "769:7:77"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31638,
              "src": "769:7:77"
            },
            "id": 56393,
            "nodeType": "InheritanceSpecifier",
            "src": "769:7:77"
          }
        ],
        "canonicalName": "ISuperToken",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 56385,
          "nodeType": "StructuredDocumentation",
          "src": "609:97:77",
          "text": " @title Super token (Superfluid Token + ERC20 + ERC777) interface\n @author Superfluid"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          56838,
          31638,
          30990,
          58109,
          58029
        ],
        "name": "ISuperToken",
        "nameLocation": "717:11:77",
        "scope": 56839,
        "usedErrors": [
          56395,
          56397,
          56399,
          56401,
          56403,
          56405,
          56407,
          56409,
          56411,
          56413,
          56415,
          56417,
          56419,
          56421,
          57750,
          57752,
          57754,
          57756,
          57758,
          57760
        ]
      }
    ],
    "license": "AGPLv3"
  },
  "id": 77
}