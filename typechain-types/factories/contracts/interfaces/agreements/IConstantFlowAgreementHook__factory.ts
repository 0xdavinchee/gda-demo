/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IConstantFlowAgreementHook,
  IConstantFlowAgreementHookInterface,
} from "../../../../contracts/interfaces/agreements/IConstantFlowAgreementHook";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "flowOperator",
            type: "address",
          },
          {
            internalType: "int96",
            name: "flowRate",
            type: "int96",
          },
        ],
        internalType: "struct IConstantFlowAgreementHook.CFAHookParams",
        name: "newFlowData",
        type: "tuple",
      },
    ],
    name: "onCreate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "flowOperator",
            type: "address",
          },
          {
            internalType: "int96",
            name: "flowRate",
            type: "int96",
          },
        ],
        internalType: "struct IConstantFlowAgreementHook.CFAHookParams",
        name: "newFlowData",
        type: "tuple",
      },
      {
        internalType: "int96",
        name: "oldFlowRate",
        type: "int96",
      },
    ],
    name: "onDelete",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "flowOperator",
            type: "address",
          },
          {
            internalType: "int96",
            name: "flowRate",
            type: "int96",
          },
        ],
        internalType: "struct IConstantFlowAgreementHook.CFAHookParams",
        name: "newFlowData",
        type: "tuple",
      },
      {
        internalType: "int96",
        name: "oldFlowRate",
        type: "int96",
      },
    ],
    name: "onUpdate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IConstantFlowAgreementHook__factory {
  static readonly abi = _abi;
  static createInterface(): IConstantFlowAgreementHookInterface {
    return new utils.Interface(_abi) as IConstantFlowAgreementHookInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IConstantFlowAgreementHook {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IConstantFlowAgreementHook;
  }
}
