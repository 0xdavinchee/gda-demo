/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IPureSuperTokenCustom,
  IPureSuperTokenCustomInterface,
} from "../../../../../contracts/interfaces/tokens/IPureSuperToken.sol/IPureSuperTokenCustom";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IPureSuperTokenCustom__factory {
  static readonly abi = _abi;
  static createInterface(): IPureSuperTokenCustomInterface {
    return new utils.Interface(_abi) as IPureSuperTokenCustomInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPureSuperTokenCustom {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IPureSuperTokenCustom;
  }
}
