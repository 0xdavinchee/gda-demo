/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  GeneralDistributionAgreementV1,
  GeneralDistributionAgreementV1Interface,
} from "../../../../contracts/agreements/GeneralDistributionAgreement.sol/GeneralDistributionAgreementV1";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISuperfluid",
        name: "host",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AGREEMENT_BASE_ONLY_HOST",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "uuid",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "codeAddress",
        type: "address",
      },
    ],
    name: "CodeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "agreementType",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "castrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract SuperTokenPool",
        name: "pool",
        type: "address",
      },
    ],
    name: "connectPool",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
    ],
    name: "createPool",
    outputs: [
      {
        internalType: "contract SuperTokenPool",
        name: "pool",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract SuperTokenPool",
        name: "pool",
        type: "address",
      },
    ],
    name: "disconnectPool",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
      {
        internalType: "contract ISuperTokenPool",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "ctx",
        type: "bytes",
      },
    ],
    name: "distribute",
    outputs: [
      {
        internalType: "bytes",
        name: "newCtx",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
      {
        internalType: "contract ISuperTokenPool",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int96",
        name: "requestedFlowRate",
        type: "int96",
      },
      {
        internalType: "bytes",
        name: "ctx",
        type: "bytes",
      },
    ],
    name: "distributeFlow",
    outputs: [
      {
        internalType: "bytes",
        name: "newCtx",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCodeAddress",
    outputs: [
      {
        internalType: "address",
        name: "codeAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "realtimeBalanceOf",
    outputs: [
      {
        internalType: "int256",
        name: "dynamicBalance",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "deposit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "owedDeposit",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "updateCode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051611fc6380380611fc683398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051611f3b61008b60003960006101d10152611f3b6000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80639049f9d2116100715780639049f9d2146101445780639903ad38146101575780639b2e48bc1461015f578063bc71d34814610194578063ec6aac2a146101a2578063fd638bda146101a257600080fd5b806346951954146100ae57806350d75d25146100c357806352d1902d146100e85780637730599e146100fe57806384621bb714610124575b600080fd5b6100c16100bc3660046108cb565b6101c6565b005b6100cb61021b565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f061024a565b6040519081526020016100df565b7fdfd8ece9bfbcb8c5c540edb935641f63d67686490a1ab97f000288759f30a9466100f0565b610137610132366004610931565b6102ae565b6040516100df91906109c8565b6100cb6101523660046108cb565b610336565b6100c1610378565b61017961016d3660046109fb565b50600092839250829150565b604080519384526020840192909252908201526060016100df565b610137610132366004610a3c565b6101b66101b03660046108cb565b50600090565b60405190151581526020016100df565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461020f57604051630b00ec8f60e11b815260040160405180910390fd5b61021881610486565b50565b60006102457f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905090565b6000306001600160a01b0316637730599e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561028a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102459190610aa2565b606060006102f28785858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061068e92505050565b905083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929a9950505050505050505050565b600033604051610345906108a9565b6001600160a01b039091168152602001604051809103906000f080158015610371573d6000803e3d6000fd5b5092915050565b600054610100900460ff16158080156103985750600054600160ff909116105b806103b25750303b1580156103b2575060005460ff166001145b61041a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801561043d576000805461ff0019166101001790555b8015610218576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a150565b60006104b07f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b0316036105065760405162461bcd60e51b815260206004820152601d60248201527f5555505350726f786961626c653a206e6f742075706772616461626c650000006044820152606401610411565b806001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610544573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105689190610aa2565b61057061024a565b146105c95760405162461bcd60e51b815260206004820152602360248201527f5555505350726f786961626c653a206e6f7420636f6d70617469626c65206c6f60448201526267696360e81b6064820152608401610411565b6001600160a01b03811630036106215760405162461bcd60e51b815260206004820152601960248201527f5555505350726f786961626c653a2070726f7879206c6f6f70000000000000006044820152606401610411565b610649817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b7fe011bc04c286c344a8fcbb8de77f953da762c3e25d8cdea984147fc4168a5dcc61067261024a565b604080519182526001600160a01b03841660208301520161047b565b604080516101608101825260008082526020820181905291810182905260608082018390526080820183905260a082015260c0810182905260e0810182905261010081018290526101208101829052610140810191909152336001600160a01b0316836001600160a01b03166320bc44256040518163ffffffff1660e01b8152600401602060405180830381865afa15801561072e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107529190610acb565b6001600160a01b03161461079c5760405162461bcd60e51b81526020600482015260116024820152701d5b985d5d1a1bdc9a5e9959081a1bdcdd607a1b6044820152606401610411565b604051632fd0a1cd60e21b8152339063bf428734906107bf9085906004016109c8565b602060405180830381865afa1580156107dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108009190610ae8565b61083a5760405162461bcd60e51b815260206004820152600b60248201526a0d2dcecc2d8d2c840c6e8f60ab1b6044820152606401610411565b604051631fb6491d60e11b81523390633f6c923a9061085d9085906004016109c8565b600060405180830381865afa15801561087a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108a29190810190610bfb565b9392505050565b61120380610d0383390190565b6001600160a01b038116811461021857600080fd5b6000602082840312156108dd57600080fd5b81356108a2816108b6565b60008083601f8401126108fa57600080fd5b50813567ffffffffffffffff81111561091257600080fd5b60208301915083602082850101111561092a57600080fd5b9250929050565b60008060008060006080868803121561094957600080fd5b8535610954816108b6565b94506020860135610964816108b6565b935060408601359250606086013567ffffffffffffffff81111561098757600080fd5b610993888289016108e8565b969995985093965092949392505050565b60005b838110156109bf5781810151838201526020016109a7565b50506000910152565b60208152600082518060208401526109e78160408501602087016109a4565b601f01601f19169190910160400192915050565b600080600060608486031215610a1057600080fd5b8335610a1b816108b6565b92506020840135610a2b816108b6565b929592945050506040919091013590565b600080600080600060808688031215610a5457600080fd5b8535610a5f816108b6565b94506020860135610a6f816108b6565b93506040860135600b81900b8114610a8657600080fd5b9250606086013567ffffffffffffffff81111561098757600080fd5b600060208284031215610ab457600080fd5b5051919050565b8051610ac6816108b6565b919050565b600060208284031215610add57600080fd5b81516108a2816108b6565b600060208284031215610afa57600080fd5b815180151581146108a257600080fd5b634e487b7160e01b600052604160045260246000fd5b604051610160810167ffffffffffffffff81118282101715610b4457610b44610b0a565b60405290565b805160ff81168114610ac657600080fd5b80516001600160e01b031981168114610ac657600080fd5b600082601f830112610b8457600080fd5b815167ffffffffffffffff80821115610b9f57610b9f610b0a565b604051601f8301601f19908116603f01168101908282118183101715610bc757610bc7610b0a565b81604052838152866020858801011115610be057600080fd5b610bf18460208301602089016109a4565b9695505050505050565b600060208284031215610c0d57600080fd5b815167ffffffffffffffff80821115610c2557600080fd5b908301906101608286031215610c3a57600080fd5b610c42610b20565b610c4b83610b4a565b8152610c5960208401610b4a565b602082015260408301516040820152610c7460608401610abb565b6060820152610c8560808401610b5b565b608082015260a083015182811115610c9c57600080fd5b610ca887828601610b73565b60a08301525060c083015160c082015260e083015160e0820152610100915081830151828201526101209150610cdf828401610abb565b828201526101409150610cf3828401610abb565b9181019190915294935050505056fe608060405234801561001057600080fd5b5060405161120338038061120383398101604081905261002f916100ad565b6100383361005d565b600580546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b611117806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806381045ead1161008c578063d1058e5911610066578063d1058e59146101de578063ed2e9e68146101e6578063f2fde38b146101f9578063f851a4401461020c57600080fd5b806381045ead146101625780638da5cb5b146101a6578063bf734e54146101cb57600080fd5b80630134aeba146100d457806342d1cdbc146100ef5780636c1d058214610112578063712c1f2614610125578063715018a6146101455780637e2758491461014f575b600080fd5b6100dc61021f565b6040519081526020015b60405180910390f35b6101026100fd366004610dc3565b610276565b60405190151581526020016100e6565b6100dc610120366004610dc3565b6102a8565b60085461013290600f0b81565b604051600f9190910b81526020016100e6565b61014d61038e565b005b61010261015d366004610def565b6103a2565b61016a610467565b604080518251600f90810b8252602093840151805163ffffffff16858401529384015182840152929091015190910b60608201526080016100e6565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100e6565b6101026101d9366004610e4c565b6104b8565b610102610778565b6101026101f4366004610e83565b610785565b61014d610207366004610e9b565b6107a8565b6005546101b3906001600160a01b031681565b6008546040805160608101825260025463ffffffff90811682526003546020830152600454600f90810b9383019390935260009342936102709391900b9161026a9190859061082616565b9061085b565b91505090565b60008061028384846102a8565b6001600160a01b03841660009081526007602052604090205550600190505b92915050565b6040805160808101825260018054600f90810b8385019081528451606081810187526002805463ffffffff90811684526003805460208681019190915260048054890b878d0152858b01969096529589526001600160a01b038b166000908152600687528a81208b518087018d5281548a0b8152998101548a8901528b519586018c5293840154831685529083015484870152919093015490940b8188015295840195909552830191909152918491610386916103689190849061086b16565b6001600160a01b0385166000908152600760205260409020546108c2565b949350505050565b6103966108ce565b6103a06000610928565b565b60006103ac6108ce565b8115610404576008546001600160a01b0384166000908152600660205260409020546103df91600f90810b91900b610978565b600880546001600160801b0319166001600160801b0392909216919091179055610452565b6008546001600160a01b03841660009081526006602052604090205461043191600f90810b91900b610984565b600880546001600160801b0319166001600160801b03929092169190911790555b61045c8484610276565b506001949350505050565b61046f610d0a565b50604080518082018252600154600f90810b8252825160608101845260025463ffffffff16815260035460208281019190915260045490920b9381019390935281019190915290565b60008082600f0b12156104de5760405163d568f5c560e01b815260040160405180910390fd5b6005546001600160a01b031633146105095760405163e448e00d60e01b815260040160405180910390fd5b428061052e604080516060810182526000808252602082018190529181019190915290565b61069a818684604051806040016040528060016040518060400160405290816000820160009054906101000a9004600f0b600f0b600f0b8152602001600182016040518060600160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001600182015481526020016002820160009054906101000a9004600f0b600f0b600f0b81525050815250508152602001600660008d6001600160a01b03166001600160a01b031681526020019081526020016000206040518060600160405290816000820160009054906101000a9004600f0b600f0b600f0b815260200160018201548152602001600282016040518060600160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001600182015481526020016002820160009054906101000a9004600f0b600f0b600f0b8152505081525050815250610990909392919063ffffffff16565b6001600160a01b038916600090815260066020908152604091829020845181546001600160801b039182166001600160801b0319918216178355868401516001848101919091559685015180516002808601805463ffffffff93841663ffffffff19918216179091558388015160038089019190915593890151600497880180549188169187169190911790558b518b5490871690861617909a559986015180518b5492169190991617909855928601519096559390910151835494169316929092179055905061076b8387610276565b5060019695505050505050565b6000426102708133610276565b600061078f6108ce565b81600161079c8282610eb6565b5060019150505b919050565b6107b06108ce565b6001600160a01b03811661081a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61082381610928565b50565b600061085461084a61083c848660000151610adb565b6040860151600f0b90610ae7565b8460200151610afd565b9392505050565b6000610854600f83900b84610f55565b60006108548360200151602001516108bd85602001516000015161026a6108a38789600001516020015161082690919063ffffffff16565b60208901516040015180516108b89190610826565b6108c2565b610afd565b60006108548284610f85565b6000546001600160a01b031633146103a05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610811565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006108548284610fac565b60006108548284610fd9565b610998610d0a565b6109a0610d47565b604080516060810182526000808252602082018190529181019190915286515160006109da6109cf8389610984565b60208b015151610978565b90506000610a15876040518060400160405280610a048b8f60000151610b0990919063ffffffff16565b815260208e81015191015290610b37565b805160200151604001519091506000600f84900b15610a4757610a3d600f83900b8686610ba2565b9092509050610a5c565b610a55600f83900b86610bcc565b9050600091505b825160200151610a6c9083610bd8565b8351602001528251600f85900b905260408b0151610a9e90610a8e9083610984565b610a988d8c610c0f565b90610bd8565b8351602080860151600f8e900b8152865190910151919a509850909650610ac490610c55565b876040018190525050505050509450945094915050565b60006108548284611006565b600061085463ffffffff8316600f85900b610f55565b60006108548284611023565b610b11610d0a565b610b1a83610c90565b6020810151909150610b2c9083610c0f565b602082015292915050565b610b3f610d7a565b8251610b4a90610c90565b81526020830151610b5a90610cb7565b6020808301919091528381015151845190910151610b94919061026a90610b819086610826565b6020870151604001516108b89087610826565b602080830151015292915050565b600080610bc083610bb7600f88900b87610bcc565b600f0b90610ce8565b91509150935093915050565b6000610854828461104b565b6040805160608101825260008082526020820181905291810191909152610bfe83610c55565b600f9290920b604083015250919050565b6040805160608101825260008082526020820181905291810191909152610c3583610c55565b9050610c418383610826565b602082015263ffffffff9091168152919050565b6040805160608101825260008082526020808301828152838501928352855163ffffffff1684529085015190529290910151600f0b90915290565b610c98610d0a565b8151600f0b81526020820151610cad90610c55565b6020820152919050565b610cbf610d47565b8151600f0b8152602080830151908201526040820151610cde90610c55565b6040820152919050565b600080610cf58385611081565b9150610d0183856110bf565b90509250929050565b60405180604001604052806000600f0b8152602001610d42604080516060810182526000808252602082018190529181019190915290565b905290565b60408051606080820183526000808352602080840182905284519283018552818352820181905281840152909182015290565b6040518060400160405280610d8d610d0a565b8152602001610d42610d47565b63ffffffff8116811461082357600080fd5b80356001600160a01b03811681146107a357600080fd5b60008060408385031215610dd657600080fd5b8235610de181610d9a565b9150610d0160208401610dac565b600080600060608486031215610e0457600080fd5b8335610e0f81610d9a565b9250610e1d60208501610dac565b915060408401358015158114610e3257600080fd5b809150509250925092565b80600f0b811461082357600080fd5b60008060408385031215610e5f57600080fd5b610e6883610dac565b91506020830135610e7881610e3d565b809150509250929050565b600060808284031215610e9557600080fd5b50919050565b600060208284031215610ead57600080fd5b61085482610dac565b8135610ec181610e3d565b81546001600160801b0319166001600160801b03821617825550600181016020830135610eed81610d9a565b815463ffffffff191663ffffffff91909116179055604082013560028201556060820135610f1a81610e3d565b6003820180546001600160801b0383166001600160801b031991909116179055505050565b634e487b7160e01b600052601160045260246000fd5b80820260008212600160ff1b84141615610f7157610f71610f3f565b81810583148215176102a2576102a2610f3f565b8181036000831280158383131683831282161715610fa557610fa5610f3f565b5092915050565b600f82810b9082900b0360016001607f1b0319811260016001607f1b03821317156102a2576102a2610f3f565b600f81810b9083900b0160016001607f1b03811360016001607f1b0319821217156102a2576102a2610f3f565b63ffffffff828116828216039080821115610fa557610fa5610f3f565b808201828112600083128015821682158216171561104357611043610f3f565b505092915050565b600082600f0b82600f0b0280600f0b9150808214610fa557610fa5610f3f565b634e487b7160e01b600052601260045260246000fd5b600081600f0b83600f0b806110985761109861106b565b60016001607f1b03198214600019821416156110b6576110b6610f3f565b90059392505050565b600082600f0b806110d2576110d261106b565b8083600f0b079150509291505056fea2646970667358221220dc1cd32c15ba594861e45191e2cc69d89014ef1af7b3e58433591a24cd7b142b64736f6c63430008130033a26469706673582212200b647e9d4a524b6974ef05d68ed55ae31411d5f1bd9d32ebae2672da7cc26a0a64736f6c63430008130033";

type GeneralDistributionAgreementV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GeneralDistributionAgreementV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GeneralDistributionAgreementV1__factory extends ContractFactory {
  constructor(...args: GeneralDistributionAgreementV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    host: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GeneralDistributionAgreementV1> {
    return super.deploy(
      host,
      overrides || {}
    ) as Promise<GeneralDistributionAgreementV1>;
  }
  override getDeployTransaction(
    host: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(host, overrides || {});
  }
  override attach(address: string): GeneralDistributionAgreementV1 {
    return super.attach(address) as GeneralDistributionAgreementV1;
  }
  override connect(signer: Signer): GeneralDistributionAgreementV1__factory {
    return super.connect(signer) as GeneralDistributionAgreementV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GeneralDistributionAgreementV1Interface {
    return new utils.Interface(_abi) as GeneralDistributionAgreementV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GeneralDistributionAgreementV1 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GeneralDistributionAgreementV1;
  }
}
