/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ITOGAv3,
  ITOGAv3Interface,
} from "../../../../contracts/utils/TOGA.sol/ITOGAv3";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract ISuperToken",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "additionalBond",
        type: "uint256",
      },
    ],
    name: "BondIncreased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract ISuperToken",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int96",
        name: "exitRate",
        type: "int96",
      },
    ],
    name: "ExitRateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract ISuperToken",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pic",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bond",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int96",
        name: "exitRate",
        type: "int96",
      },
    ],
    name: "NewPIC",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "token",
        type: "address",
      },
      {
        internalType: "int96",
        name: "newExitRate",
        type: "int96",
      },
    ],
    name: "changeExitRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "token",
        type: "address",
      },
    ],
    name: "getCurrentPIC",
    outputs: [
      {
        internalType: "address",
        name: "pic",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "token",
        type: "address",
      },
    ],
    name: "getCurrentPICInfo",
    outputs: [
      {
        internalType: "address",
        name: "pic",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bond",
        type: "uint256",
      },
      {
        internalType: "int96",
        name: "exitRate",
        type: "int96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bondAmount",
        type: "uint256",
      },
    ],
    name: "getDefaultExitRateFor",
    outputs: [
      {
        internalType: "int96",
        name: "exitRate",
        type: "int96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bondAmount",
        type: "uint256",
      },
    ],
    name: "getMaxExitRateFor",
    outputs: [
      {
        internalType: "int96",
        name: "exitRate",
        type: "int96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ITOGAv3__factory {
  static readonly abi = _abi;
  static createInterface(): ITOGAv3Interface {
    return new utils.Interface(_abi) as ITOGAv3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ITOGAv3 {
    return new Contract(address, _abi, signerOrProvider) as ITOGAv3;
  }
}
