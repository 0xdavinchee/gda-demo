/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  BadCFAHookMock,
  BadCFAHookMockInterface,
} from "../../../../contracts/mocks/CFAHookMocks.sol/BadCFAHookMock";

const _abi = [
  {
    inputs: [],
    name: "BAD_HOOK",
    type: "error",
  },
  {
    inputs: [],
    name: "NOT_CFA",
    type: "error",
  },
  {
    inputs: [],
    name: "NOT_OWNER",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "flowOperator",
            type: "address",
          },
          {
            internalType: "int96",
            name: "flowRate",
            type: "int96",
          },
        ],
        internalType: "struct IConstantFlowAgreementHook.CFAHookParams",
        name: "",
        type: "tuple",
      },
    ],
    name: "onCreate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "flowOperator",
            type: "address",
          },
          {
            internalType: "int96",
            name: "flowRate",
            type: "int96",
          },
        ],
        internalType: "struct IConstantFlowAgreementHook.CFAHookParams",
        name: "",
        type: "tuple",
      },
      {
        internalType: "int96",
        name: "",
        type: "int96",
      },
    ],
    name: "onDelete",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "flowOperator",
            type: "address",
          },
          {
            internalType: "int96",
            name: "flowRate",
            type: "int96",
          },
        ],
        internalType: "struct IConstantFlowAgreementHook.CFAHookParams",
        name: "",
        type: "tuple",
      },
      {
        internalType: "int96",
        name: "",
        type: "int96",
      },
    ],
    name: "onUpdate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ConstantFlowAgreementV1",
        name: "_cfaV1",
        type: "address",
      },
    ],
    name: "setCFA",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50336080526080516102e461002f600039600060eb01526102e46000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632742e95a146100515780636ac5bc3114610051578063ad53099b14610078578063e3d8fefe1461008d575b600080fd5b61006461005f36600461020e565b61009b565b604051901515815260200160405180910390f35b61008b610086366004610254565b6100e0565b005b61006461005f366004610278565b600080546001600160a01b031633146100c757604051631f9bdf8b60e21b815260040160405180910390fd5b60405163746e8e9f60e11b815260040160405180910390fd5b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610129576040516338ebc58960e11b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038116811461016057600080fd5b50565b8035600b81900b811461017557600080fd5b919050565b60006080828403121561018c57600080fd5b6040516080810181811067ffffffffffffffff821117156101bd57634e487b7160e01b600052604160045260246000fd5b60405290508082356101ce8161014b565b815260208301356101de8161014b565b602082015260408301356101f18161014b565b604082015261020260608401610163565b60608201525092915050565b600080600060c0848603121561022357600080fd5b833561022e8161014b565b925061023d856020860161017a565b915061024b60a08501610163565b90509250925092565b60006020828403121561026657600080fd5b81356102718161014b565b9392505050565b60008060a0838503121561028b57600080fd5b82356102968161014b565b91506102a5846020850161017a565b9050925092905056fea2646970667358221220a72b235cee9e15f0204d409da4142a8848470c95556c14f7d29cd0cd7c9c1b4e64736f6c63430008130033";

type BadCFAHookMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BadCFAHookMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BadCFAHookMock__factory extends ContractFactory {
  constructor(...args: BadCFAHookMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BadCFAHookMock> {
    return super.deploy(overrides || {}) as Promise<BadCFAHookMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BadCFAHookMock {
    return super.attach(address) as BadCFAHookMock;
  }
  override connect(signer: Signer): BadCFAHookMock__factory {
    return super.connect(signer) as BadCFAHookMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BadCFAHookMockInterface {
    return new utils.Interface(_abi) as BadCFAHookMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BadCFAHookMock {
    return new Contract(address, _abi, signerOrProvider) as BadCFAHookMock;
  }
}
