/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SuperfluidDestructorMock,
  SuperfluidDestructorMockInterface,
} from "../../../contracts/mocks/SuperfluidDestructorMock";

const _abi = [
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "NON_UPGRADABLE_DEPLOYMENT",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040526000608052348015601457600080fd5b50608051609c61002d600039600060300152609c6000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063cd312ec414602c575b6000ff5b60527f000000000000000000000000000000000000000000000000000000000000000081565b604051901515815260200160405180910390f3fea264697066735822122065028e6cc3a1447f60610dded44e58a413f3848e4b4a34b86a10c0987bdfac5764736f6c63430008130033";

type SuperfluidDestructorMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SuperfluidDestructorMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SuperfluidDestructorMock__factory extends ContractFactory {
  constructor(...args: SuperfluidDestructorMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SuperfluidDestructorMock> {
    return super.deploy(overrides || {}) as Promise<SuperfluidDestructorMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SuperfluidDestructorMock {
    return super.attach(address) as SuperfluidDestructorMock;
  }
  override connect(signer: Signer): SuperfluidDestructorMock__factory {
    return super.connect(signer) as SuperfluidDestructorMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SuperfluidDestructorMockInterface {
    return new utils.Interface(_abi) as SuperfluidDestructorMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SuperfluidDestructorMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SuperfluidDestructorMock;
  }
}
